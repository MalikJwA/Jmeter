<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="FRANCE 2025-2026 V1">
      <stringProp name="TestPlan.comments">UAT</stringProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="Variables pré-définies">
        <collectionProp name="Arguments.arguments">
          <elementProp name="API_VERSION" elementType="Argument">
            <stringProp name="Argument.name">API_VERSION</stringProp>
            <stringProp name="Argument.value">60.0</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="URL" elementType="Argument">
            <stringProp name="Argument.name">URL</stringProp>
            <stringProp name="Argument.value">mlbb--uat.sandbox.my.salesforce.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="-------------------------------------------------------" elementType="Argument">
            <stringProp name="Argument.name">-------------------------------------------------------</stringProp>
            <stringProp name="Argument.value">-------------------------------------------------------</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="-------------------------------------------------------" elementType="Argument">
            <stringProp name="Argument.name">-------------------------------------------------------</stringProp>
            <stringProp name="Argument.value">-------------------------------------------------------</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="-------------------------------------------------------" elementType="Argument">
            <stringProp name="Argument.name">-------------------------------------------------------</stringProp>
            <stringProp name="Argument.value">-------------------------------------------------------</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="UID" elementType="Argument">
            <stringProp name="Argument.name">UID</stringProp>
            <stringProp name="Argument.value">${__time(yyyy-MM-dd-HH:mm:ss)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="SourceSystemId" elementType="Argument">
            <stringProp name="Argument.name">SourceSystemId</stringProp>
            <stringProp name="Argument.value">GLOBAL_GIGYA</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="PersonEmail" elementType="Argument">
            <stringProp name="Argument.name">PersonEmail</stringProp>
            <stringProp name="Argument.value">Jmeter_${__Random(10000000,99999999,)}@gmail.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="LoyaltyTierGroupName" elementType="Argument">
            <stringProp name="Argument.name">LoyaltyTierGroupName</stringProp>
            <stringProp name="Argument.value">Belgium_2025-2026</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="MarketId" elementType="Argument">
            <stringProp name="Argument.name">MarketId</stringProp>
            <stringProp name="Argument.value">BE</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="-------------------------------------------------------" elementType="Argument">
            <stringProp name="Argument.name">-------------------------------------------------------</stringProp>
            <stringProp name="Argument.value">-------------------------------------------------------</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="-------------------------------------------------------" elementType="Argument">
            <stringProp name="Argument.name">-------------------------------------------------------</stringProp>
            <stringProp name="Argument.value">-------------------------------------------------------</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="-------------------------------------------------------" elementType="Argument">
            <stringProp name="Argument.name">-------------------------------------------------------</stringProp>
            <stringProp name="Argument.value">-------------------------------------------------------</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="TimerBatch" elementType="Argument">
            <stringProp name="Argument.name">TimerBatch</stringProp>
            <stringProp name="Argument.value">120000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="TimerCallAfterBatch" elementType="Argument">
            <stringProp name="Argument.name">TimerCallAfterBatch</stringProp>
            <stringProp name="Argument.value">80000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="-------------------------------------------------------" elementType="Argument">
            <stringProp name="Argument.name">-------------------------------------------------------</stringProp>
            <stringProp name="Argument.value">-------------------------------------------------------</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="-------------------------------------------------------" elementType="Argument">
            <stringProp name="Argument.name">-------------------------------------------------------</stringProp>
            <stringProp name="Argument.value">-------------------------------------------------------</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="-------------------------------------------------------" elementType="Argument">
            <stringProp name="Argument.name">-------------------------------------------------------</stringProp>
            <stringProp name="Argument.value">-------------------------------------------------------</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="SKU_EXCLUSIVITY" elementType="Argument">
            <stringProp name="Argument.name">SKU_EXCLUSIVITY</stringProp>
            <stringProp name="Argument.value">0144780</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="SKU_REFILL" elementType="Argument">
            <stringProp name="Argument.name">SKU_REFILL</stringProp>
            <stringProp name="Argument.value">0185284</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="SKU_BEAUTY_ROUTINE" elementType="Argument">
            <stringProp name="Argument.name">SKU_BEAUTY_ROUTINE</stringProp>
            <stringProp name="Argument.value">0141050</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="SKU_BEAUTY_ROUTINE2" elementType="Argument">
            <stringProp name="Argument.name">SKU_BEAUTY_ROUTINE2</stringProp>
            <stringProp name="Argument.value">0141020</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="00 - PROFILS AUTHENTICATION">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0000 - LOGIN ADMIN UAT" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/oauth2/token</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables pré-définies">
            <collectionProp name="Arguments.arguments">
              <elementProp name="grant_type" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">password</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">grant_type</stringProp>
              </elementProp>
              <elementProp name="client_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${client_id}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">client_id</stringProp>
              </elementProp>
              <elementProp name="client_secret" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${client_secret}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">client_secret</stringProp>
              </elementProp>
              <elementProp name="username" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${username}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">username</stringProp>
              </elementProp>
              <elementProp name="password" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${password}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">password</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Extract Token" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">token</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.access_token</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <stringProp name="Scope.variable"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="Pass Token Between Thread Groups" enabled="true">
            <stringProp name="TestPlan.comments">https://devqa.io/jmeter-pass-variables-between-thread-groups/</stringProp>
            <stringProp name="BeanShellAssertion.query">${__setProperty(token, ${token})};</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="-265713450">username</stringProp>
              <stringProp name="1216985755">password</stringProp>
              <stringProp name="-1904089585">client_id</stringProp>
              <stringProp name="557813156">client_secret</stringProp>
              <stringProp name="84303">URL</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-1045209029">
                <stringProp name="-396450683">malik.rachi@chanel.com.uat</stringProp>
                <stringProp name="-1533914222">Johnwick22&amp;&amp;Pj0fVCkDlr0QBQNKXGkAV76t</stringProp>
                <stringProp name="-1350383374">3MVG9h1tlolNnV8P03yUhOVGzSNT1swuiwyqgtA60fZ7GH9OCORB.Dr9ASGw7gybx7yVsodBROu_yLMD3VHWi</stringProp>
                <stringProp name="-1160630686">FD66F6BDBD436C375C27AE5A31A86EE4A2FD00506937DE17B123D8954710F732</stringProp>
                <stringProp name="1800336104">mlbb--uat.sandbox.my.salesforce.com</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">true</boolProp>
          </UserParameters>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0000 - LOGIN ADMIN PROD" enabled="false">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/oauth2/token</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables pré-définies">
            <collectionProp name="Arguments.arguments">
              <elementProp name="grant_type" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">password</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">grant_type</stringProp>
              </elementProp>
              <elementProp name="client_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${client_id}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">client_id</stringProp>
              </elementProp>
              <elementProp name="client_secret" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${client_secret}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">client_secret</stringProp>
              </elementProp>
              <elementProp name="username" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${username}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">username</stringProp>
              </elementProp>
              <elementProp name="password" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${password}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">password</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Extract Token" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">token</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.access_token</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <stringProp name="Scope.variable"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="Pass Token Between Thread Groups" enabled="true">
            <stringProp name="TestPlan.comments">https://devqa.io/jmeter-pass-variables-between-thread-groups/</stringProp>
            <stringProp name="BeanShellAssertion.query">${__setProperty(token, ${token})};</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="-265713450">username</stringProp>
              <stringProp name="1216985755">password</stringProp>
              <stringProp name="-1904089585">client_id</stringProp>
              <stringProp name="557813156">client_secret</stringProp>
              <stringProp name="84303">URL</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="1862685668">
                <stringProp name="1669576075">malik.rachi@chanel.com</stringProp>
                <stringProp name="1832556089">Johnwick11&amp;&amp;F2HR84l86BITnpSTkWdplQUwU</stringProp>
                <stringProp name="873693023">3MVG9lsAlIP.W_V_GV2Xsouj_YASTf2wPdhkuIvkTsOfpqgLys.N6Pt69E3FKbUZ9Q.IQRpCMmkR4pikAdOAn</stringProp>
                <stringProp name="-539026563">691711E5D2506FFD3D91BDF8E9E9A9D62B3C13BE7E164D859B57A3F22FF77B33</stringProp>
                <stringProp name="1476546277">mlbb.my.salesforce.com</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">true</boolProp>
          </UserParameters>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0000 - LOGIN ADMIN INT" enabled="false">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/oauth2/token</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables pré-définies">
            <collectionProp name="Arguments.arguments">
              <elementProp name="grant_type" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">password</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">grant_type</stringProp>
              </elementProp>
              <elementProp name="client_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${client_id}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">client_id</stringProp>
              </elementProp>
              <elementProp name="client_secret" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${client_secret}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">client_secret</stringProp>
              </elementProp>
              <elementProp name="username" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${username}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">username</stringProp>
              </elementProp>
              <elementProp name="password" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${password}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">password</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Extract Token" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">token</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.access_token</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <stringProp name="Scope.variable"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="Pass Token Between Thread Groups" enabled="true">
            <stringProp name="TestPlan.comments">https://devqa.io/jmeter-pass-variables-between-thread-groups/</stringProp>
            <stringProp name="BeanShellAssertion.query">${__setProperty(token, ${token})};</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="-265713450">username</stringProp>
              <stringProp name="1216985755">password</stringProp>
              <stringProp name="-1904089585">client_id</stringProp>
              <stringProp name="557813156">client_secret</stringProp>
              <stringProp name="84303">URL</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="341573332">
                <stringProp name="-564751560">malik.rachi@chanel.com.balinkdev1</stringProp>
                <stringProp name="550328609">Johnwick33&amp;&amp;FIeEbHRd9s0umlOkpPIFVYWl0</stringProp>
                <stringProp name="740624341">3MVG9rKhT8ocoxGkPdSEUBFzU_dSMKcgVHzFB1QlBXQBjILcTRlqV8K2HW13TcJ4thIjAj5sKZBymCnzScfDJ</stringProp>
                <stringProp name="-877863884">5DBDA6C031659E37FDB98718B856E145E834811A3A977A6099A5A132EE6E07C2</stringProp>
                <stringProp name="-251573259">mlbb-int--balinkdev1.sandbox.my.salesforce.com</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">true</boolProp>
          </UserParameters>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0000 - LOGIN ADMIN OAT" enabled="false">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/oauth2/token</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables pré-définies">
            <collectionProp name="Arguments.arguments">
              <elementProp name="grant_type" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">password</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">grant_type</stringProp>
              </elementProp>
              <elementProp name="client_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${client_id}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">client_id</stringProp>
              </elementProp>
              <elementProp name="client_secret" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${client_secret}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">client_secret</stringProp>
              </elementProp>
              <elementProp name="username" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${username}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">username</stringProp>
              </elementProp>
              <elementProp name="password" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${password}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">password</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Extract Token" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">token</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.access_token</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <stringProp name="Scope.variable"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="Pass Token Between Thread Groups" enabled="true">
            <stringProp name="TestPlan.comments">https://devqa.io/jmeter-pass-variables-between-thread-groups/</stringProp>
            <stringProp name="BeanShellAssertion.query">${__setProperty(token, ${token})};</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="-265713450">username</stringProp>
              <stringProp name="1216985755">password</stringProp>
              <stringProp name="-1904089585">client_id</stringProp>
              <stringProp name="557813156">client_secret</stringProp>
              <stringProp name="84303">URL</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-886929256">
                <stringProp name="-396456449">malik.rachi@chanel.com.oat</stringProp>
                <stringProp name="-1996323059">Johnwick22&amp;&amp;FND4oQDaBW2J2ncxH0CkJ7Nd</stringProp>
                <stringProp name="-46171369">3MVG9llQY5kM9T6ft1Y9n7M2VbU5tGeRfj_VztgWS9x2knlBmIwvLVog2_V3U8v2bUdqPzVC7uRs7lCY1XrBV</stringProp>
                <stringProp name="-1756888649">9B9365FB1C3D07C55D66F64656386B6FE105A5FB9887E62FD7A0AA4D95F2F4B0</stringProp>
                <stringProp name="1936693218">mlbb--oat.sandbox.my.salesforce.com</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">true</boolProp>
          </UserParameters>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0000 - LOGIN AGENT" enabled="false">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/oauth2/token</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables pré-définies">
            <collectionProp name="Arguments.arguments">
              <elementProp name="grant_type" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">password</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">grant_type</stringProp>
              </elementProp>
              <elementProp name="client_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${client_id}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">client_id</stringProp>
              </elementProp>
              <elementProp name="client_secret" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${client_secret}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">client_secret</stringProp>
              </elementProp>
              <elementProp name="username" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${username}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">username</stringProp>
              </elementProp>
              <elementProp name="password" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${password}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">password</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Extract Token" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">token</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.access_token</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <stringProp name="Scope.variable"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="Pass Token Between Thread Groups" enabled="true">
            <stringProp name="TestPlan.comments">https://devqa.io/jmeter-pass-variables-between-thread-groups/</stringProp>
            <stringProp name="BeanShellAssertion.query">${__setProperty(token, ${token})};</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="-265713450">username</stringProp>
              <stringProp name="1216985755">password</stringProp>
              <stringProp name="-1904089585">client_id</stringProp>
              <stringProp name="557813156">client_secret</stringProp>
              <stringProp name="84303">URL</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-1674047287">
                <stringProp name="327987699">usain.bolt.uat22@yopmail.com.uat</stringProp>
                <stringProp name="-252401143">AgentTest2024!Bnkp1bYVD3vgW5oXn3MKoNsj</stringProp>
                <stringProp name="98729447">3MVG9lcxCTdG2VbtWAnBLcHTY.yOfhRZ57p1kEW5eoXIU_BeJBN2m8pwOpu_MzmfU0MVdWDV.EJc12LHKwsju</stringProp>
                <stringProp name="1365633136">26B83E7300CFB00C809A2A6B3F041EC0788AC7EE2642E3656C3B117201F15116</stringProp>
                <stringProp name="1800336104">mlbb--uat.sandbox.my.salesforce.com</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">true</boolProp>
          </UserParameters>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0000 - LOGIN SUPERVISEUR" enabled="false">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/oauth2/token</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables pré-définies">
            <collectionProp name="Arguments.arguments">
              <elementProp name="grant_type" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">password</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">grant_type</stringProp>
              </elementProp>
              <elementProp name="client_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${client_id}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">client_id</stringProp>
              </elementProp>
              <elementProp name="client_secret" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${client_secret}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">client_secret</stringProp>
              </elementProp>
              <elementProp name="username" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${username}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">username</stringProp>
              </elementProp>
              <elementProp name="password" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${password}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">password</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Extract Token" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">token</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.access_token</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <stringProp name="Scope.variable"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="Pass Token Between Thread Groups" enabled="true">
            <stringProp name="TestPlan.comments">https://devqa.io/jmeter-pass-variables-between-thread-groups/</stringProp>
            <stringProp name="BeanShellAssertion.query">${__setProperty(token, ${token})};</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="-265713450">username</stringProp>
              <stringProp name="1216985755">password</stringProp>
              <stringProp name="-1904089585">client_id</stringProp>
              <stringProp name="557813156">client_secret</stringProp>
              <stringProp name="84303">URL</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="976959729">
                <stringProp name="-231698668">laure.manaudou.test@gmail.com.uat</stringProp>
                <stringProp name="323340225">SuperviseurTest2024!RwD5LWQ34XAMfP3f5F7QI3RQ7</stringProp>
                <stringProp name="98729447">3MVG9lcxCTdG2VbtWAnBLcHTY.yOfhRZ57p1kEW5eoXIU_BeJBN2m8pwOpu_MzmfU0MVdWDV.EJc12LHKwsju</stringProp>
                <stringProp name="1365633136">26B83E7300CFB00C809A2A6B3F041EC0788AC7EE2642E3656C3B117201F15116</stringProp>
                <stringProp name="1800336104">mlbb--uat.sandbox.my.salesforce.com</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">true</boolProp>
          </UserParameters>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0000 - LOGIN MANAGER" enabled="false">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/oauth2/token</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables pré-définies">
            <collectionProp name="Arguments.arguments">
              <elementProp name="grant_type" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">password</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">grant_type</stringProp>
              </elementProp>
              <elementProp name="client_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${client_id}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">client_id</stringProp>
              </elementProp>
              <elementProp name="client_secret" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${client_secret}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">client_secret</stringProp>
              </elementProp>
              <elementProp name="username" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${username}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">username</stringProp>
              </elementProp>
              <elementProp name="password" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${password}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">password</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Extract Token" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">token</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.access_token</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <stringProp name="Scope.variable"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="Pass Token Between Thread Groups" enabled="true">
            <stringProp name="TestPlan.comments">https://devqa.io/jmeter-pass-variables-between-thread-groups/</stringProp>
            <stringProp name="BeanShellAssertion.query">${__setProperty(token, ${token})};</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="-265713450">username</stringProp>
              <stringProp name="1216985755">password</stringProp>
              <stringProp name="-1904089585">client_id</stringProp>
              <stringProp name="557813156">client_secret</stringProp>
              <stringProp name="84303">URL</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="1754019904">
                <stringProp name="1794887676">pierrerene389@gmail.com.uat</stringProp>
                <stringProp name="-1271449467">ManagerTest2024!Qyp6dpHavRLSIvIU8XHUPBHER</stringProp>
                <stringProp name="98729447">3MVG9lcxCTdG2VbtWAnBLcHTY.yOfhRZ57p1kEW5eoXIU_BeJBN2m8pwOpu_MzmfU0MVdWDV.EJc12LHKwsju</stringProp>
                <stringProp name="1365633136">26B83E7300CFB00C809A2A6B3F041EC0788AC7EE2642E3656C3B117201F15116</stringProp>
                <stringProp name="1800336104">mlbb--uat.sandbox.my.salesforce.com</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">true</boolProp>
          </UserParameters>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="01 - WELCOME CARD" enabled="true">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">startnextloop</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
          <collectionProp name="UserParameters.names">
            <stringProp name="67815789">GIGYA</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="102378257">
              <stringProp name="938932639">${SourceSystemId}|${UID}</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="UserParameters.per_iteration">true</boolProp>
        </UserParameters>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0100 - WELCOME CARD : MEMBER GRIDS" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Id FROM RecordType WHERE sObjectType=&apos;Account&apos; AND DeveloperName=&apos;PersonAccount&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;rtRef&quot;&#xd;
        },&#xd;
        {&#xd;
           &quot;method&quot;: &quot;PATCH&quot;,&#xd;
           &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/account/Gigya_ID__c/${GIGYA}&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;BelongsToLaCollection__c&quot; : true,&#xd;
                &quot;LaCollection_MarketId__c&quot; : &quot;${MarketId}&quot;,&#xd;
                &quot;recordTypeId&quot; : &quot;@{rtRef.records[0].Id}&quot;,&#xd;
                &quot;PersonEmail&quot; : &quot;${PersonEmail}&quot;,&#xd;
                &quot;LastName&quot; : &quot;SamMDR&quot;&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;accountRef&quot;&#xd;
        },&#xd;
&#xd;
        {&#xd;
           &quot;method&quot;: &quot;PATCH&quot;,&#xd;
           &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/CustomerSource__c/UniqueKey__c/${SourceSystemId}-${UID}&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;SourceSystemId__c&quot; : &quot;${SourceSystemId}&quot;,&#xd;
                &quot;Id__c&quot; : &quot;${UID}&quot;,&#xd;
                &quot;Client__r&quot;: {&#xd;
                    &quot;Gigya_id__c&quot; : &quot;${GIGYA}&quot;&#xd;
                }&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;customerSourceRef&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Member created?" enabled="false">
            <stringProp name="JSON_PATH">$.compositeResponse[1].body.success</stringProp>
            <stringProp name="EXPECTED_VALUE">true</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0101 - WELCOME CARD : POST T&amp;CS" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/LoyaltyProgramMember/MembershipNumber/${GIGYA}?fields=Id&quot;,&#xd;
            &quot;referenceId&quot; : &quot;memberRef&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Id FROM LoyaltyMemberTier WHERE LoyaltyMemberId = &apos;@{memberRef.Id}&apos; AND CycleActive__c=true&quot;,&#xd;
            &quot;referenceId&quot; : &quot;mtRef&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;method&quot;: &quot;PATCH&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/loyaltymembertier/id/@{mtRef.records[0].Id}&quot;,&#xd;
            &quot;referenceId&quot; : &quot;mtUpdateRef&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;OptIn_TermsConditions__c&quot; : true&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;method&quot;: &quot;PATCH&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/LoyaltyProgramMember/MembershipNumber/${GIGYA}&quot;,&#xd;
            &quot;referenceId&quot; : &quot;memberRefUpdate&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;Language__c&quot; : &quot;FR&quot;&#xd;
            }&#xd;
       }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Language updated?" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[3].body.success</stringProp>
            <stringProp name="EXPECTED_VALUE">true</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="T&amp;C Updated?" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[2].body.success</stringProp>
            <stringProp name="EXPECTED_VALUE">true</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">500</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0102 - WELCOME CARD : ACE VERIFICATION ?">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Id, Name, Card_State__c, Contact.account.Gigya_ID__c, Position__c FROM MemberBenefit WHERE Name = &apos;WELCOME&apos; AND Transaction_Journal__c != null AND Contact.Account.Gigya_ID__c =&apos;${GIGYA}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;ref22&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">8000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[0].body.totalSize</stringProp>
            <stringProp name="EXPECTED_VALUE">1</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="03 - REWARD CARD" enabled="true">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">startnextloop</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
          <collectionProp name="UserParameters.names"/>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="1"/>
          </collectionProp>
          <boolProp name="UserParameters.per_iteration">true</boolProp>
        </UserParameters>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0301 - REWARD CARD : MEMBER GRIDS" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Id FROM RecordType WHERE sObjectType=&apos;Account&apos; AND DeveloperName=&apos;PersonAccount&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;rtRef&quot;&#xd;
        },&#xd;
        {&#xd;
           &quot;method&quot;: &quot;PATCH&quot;,&#xd;
           &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/account/Gigya_ID__c/${GIGYA}&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;BelongsToLaCollection__c&quot; : true,&#xd;
                &quot;LaCollection_MarketId__c&quot; : &quot;${MarketId}&quot;,&#xd;
                &quot;recordTypeId&quot; : &quot;@{rtRef.records[0].Id}&quot;,&#xd;
                &quot;PersonEmail&quot; : &quot;${PersonEmail}&quot;&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;accountRef&quot;&#xd;
        },&#xd;
&#xd;
        {&#xd;
           &quot;method&quot;: &quot;PATCH&quot;,&#xd;
           &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/CustomerSource__c/UniqueKey__c/${SourceSystemId}-${UID}&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;SourceSystemId__c&quot; : &quot;${SourceSystemId}&quot;,&#xd;
                &quot;Id__c&quot; : &quot;${UID}&quot;,&#xd;
                &quot;Client__r&quot;: {&#xd;
                    &quot;Gigya_id__c&quot; : &quot;${GIGYA}&quot;&#xd;
                }&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;customerSourceRef&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Member created?" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[1].body.success</stringProp>
            <stringProp name="EXPECTED_VALUE">true</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0302 - REWARD CARD : POST T&amp;CS" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/LoyaltyProgramMember/MembershipNumber/${GIGYA}?fields=Id&quot;,&#xd;
            &quot;referenceId&quot; : &quot;memberRef&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Id FROM LoyaltyMemberTier WHERE LoyaltyMemberId = &apos;@{memberRef.Id}&apos; AND CycleActive__c=true&quot;,&#xd;
            &quot;referenceId&quot; : &quot;mtRef&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;method&quot;: &quot;PATCH&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/loyaltymembertier/id/@{mtRef.records[0].Id}&quot;,&#xd;
            &quot;referenceId&quot; : &quot;mtUpdateRef&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;OptIn_TermsConditions__c&quot; : true&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;method&quot;: &quot;PATCH&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/LoyaltyProgramMember/MembershipNumber/${GIGYA}&quot;,&#xd;
            &quot;referenceId&quot; : &quot;memberRefUpdate&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;Language__c&quot; : &quot;FR&quot;&#xd;
            }&#xd;
       }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Language updated?" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[3].body.success</stringProp>
            <stringProp name="EXPECTED_VALUE">true</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="T&amp;C Updated?" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[2].body.success</stringProp>
            <stringProp name="EXPECTED_VALUE">true</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">500</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0303 - REWARD CARD : EXCLUSIVITY TRANSACTION 1" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
		&#xd;
        {&#xd;
           &quot;method&quot;: &quot;PATCH&quot;,&#xd;
           &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/transaction__c/TransactionNumber__c/T-${GIGYA}&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;CustomerSourceSystemId__c&quot; : &quot;${SourceSystemId}&quot;,&#xd;
                &quot;CustomerSourceId__c&quot; : &quot;${UID}&quot;,&#xd;
               &quot;CodeBoutiqueTechnical__c&quot; : &quot;A1&quot;,&#xd;
                &quot;CreationTimeStamp__c&quot; : &quot;${__time(YYYY-MM-dd,)}T00:00:00.000+0000&quot;&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;transactionRef&quot;&#xd;
        },&#xd;
	   {&#xd;
            &quot;method&quot;: &quot;PATCH&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/ccc_product__c/ExternalId__c/Jmeter-${GIGYA}&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;Name__c&quot;: &quot;Jmeter-${GIGYA}&quot;,&#xd;
                &quot;SKU__c&quot;: &quot;${SKU_EXCLUSIVITY}&quot;,&#xd;
                &quot;Type__c&quot; : &quot;SellProduct&quot;,&#xd;
                &quot;Line__c&quot;: &quot;P1&quot;&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;productRef&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;method&quot;: &quot;PATCH&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/TransactionLine__c/TransactionLineNumber__c/Line-${GIGYA}&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;Transaction__r&quot; : {&#xd;
                    &quot;TransactionNumber__c&quot; : &quot;T-${GIGYA}&quot;&#xd;
                },&#xd;
                &quot;Product__c&quot; : &quot;@{productRef.id}&quot;,&#xd;
                &quot;Quantity__c&quot; : 1,&#xd;
                &quot;Currency_Code__c&quot; : &quot;EUR&quot;,&#xd;
                &quot;DivisionCode__c&quot; : &quot;FNB&quot;,&#xd;
                &quot;NetRevenueTaxEUR__c&quot; : 50,&#xd;
                &quot;AdvisorCode__c&quot;: &quot;A1126&quot;&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;transactionLineRef&quot;&#xd;
        }&#xd;
       &#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Extract TransactionLineId" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">IdTransactionLine</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.compositeResponse[1].body.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Transaction ok?" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[0].body.success</stringProp>
            <stringProp name="EXPECTED_VALUE">true</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0304 - REWARD CARD : EXCLUSIVITY TRANSACTION 2" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
		&#xd;
        {&#xd;
           &quot;method&quot;: &quot;PATCH&quot;,&#xd;
           &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/transaction__c/TransactionNumber__c/T2-${GIGYA}&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;CustomerSourceSystemId__c&quot; : &quot;${SourceSystemId}&quot;,&#xd;
                &quot;CustomerSourceId__c&quot; : &quot;${UID}&quot;,&#xd;
               &quot;CodeBoutiqueTechnical__c&quot; : &quot;A1&quot;,&#xd;
                &quot;CreationTimeStamp__c&quot; : &quot;${__time(YYYY-MM-dd,)}T01:00:00.000+0000&quot;&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;transactionRef&quot;&#xd;
        },&#xd;
	   {&#xd;
            &quot;method&quot;: &quot;PATCH&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/ccc_product__c/ExternalId__c/Jmeter2-${GIGYA}&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;Name__c&quot;: &quot;Jmeter2-${GIGYA}&quot;,&#xd;
                &quot;SKU__c&quot;: &quot;${SKU_EXCLUSIVITY}&quot;,&#xd;
                &quot;Type__c&quot; : &quot;SellProduct&quot;,&#xd;
                &quot;Line__c&quot;: &quot;P1&quot;&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;productRef&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;method&quot;: &quot;PATCH&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/TransactionLine__c/TransactionLineNumber__c/Line2-${GIGYA}&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;Transaction__r&quot; : {&#xd;
                    &quot;TransactionNumber__c&quot; : &quot;T2-${GIGYA}&quot;&#xd;
                },&#xd;
                &quot;Product__c&quot; : &quot;@{productRef.id}&quot;,&#xd;
                &quot;Quantity__c&quot; : 1,&#xd;
                &quot;Currency_Code__c&quot; : &quot;EUR&quot;,&#xd;
                &quot;DivisionCode__c&quot; : &quot;FNB&quot;,&#xd;
                &quot;NetRevenueTaxEUR__c&quot; : 50,&#xd;
                &quot;AdvisorCode__c&quot;: &quot;A1126&quot;&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;transactionLineRef&quot;&#xd;
        }&#xd;
       &#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Extract TransactionLineId" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">IdTransactionLine</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.compositeResponse[1].body.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Transaction ok?" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[0].body.success</stringProp>
            <stringProp name="EXPECTED_VALUE">true</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0305 - REWARD CARD : EXCLUSIVITY TRANSACTION 3" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
		&#xd;
        {&#xd;
           &quot;method&quot;: &quot;PATCH&quot;,&#xd;
           &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/transaction__c/TransactionNumber__c/T3-${GIGYA}&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;CustomerSourceSystemId__c&quot; : &quot;${SourceSystemId}&quot;,&#xd;
                &quot;CustomerSourceId__c&quot; : &quot;${UID}&quot;,&#xd;
               &quot;CodeBoutiqueTechnical__c&quot; : &quot;A1&quot;,&#xd;
                &quot;CreationTimeStamp__c&quot; : &quot;${__time(YYYY-MM-dd,)}T03:00:00.000+0000&quot;&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;transactionRef&quot;&#xd;
        },&#xd;
	   {&#xd;
            &quot;method&quot;: &quot;PATCH&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/ccc_product__c/ExternalId__c/Jmeter3-${GIGYA}&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;Name__c&quot;: &quot;Jmeter3-${GIGYA}&quot;,&#xd;
                &quot;SKU__c&quot;: &quot;${SKU_EXCLUSIVITY}&quot;,&#xd;
                &quot;Type__c&quot; : &quot;SellProduct&quot;,&#xd;
                &quot;Line__c&quot;: &quot;P1&quot;&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;productRef&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;method&quot;: &quot;PATCH&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/TransactionLine__c/TransactionLineNumber__c/Line3-${GIGYA}&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;Transaction__r&quot; : {&#xd;
                    &quot;TransactionNumber__c&quot; : &quot;T3-${GIGYA}&quot;&#xd;
                },&#xd;
                &quot;Product__c&quot; : &quot;@{productRef.id}&quot;,&#xd;
                &quot;Quantity__c&quot; : 1,&#xd;
                &quot;Currency_Code__c&quot; : &quot;EUR&quot;,&#xd;
                &quot;DivisionCode__c&quot; : &quot;FNB&quot;,&#xd;
                &quot;NetRevenueTaxEUR__c&quot; : 50,&#xd;
                &quot;AdvisorCode__c&quot;: &quot;A1126&quot;&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;transactionLineRef&quot;&#xd;
        }&#xd;
       &#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Extract TransactionLineId" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">IdTransactionLine</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.compositeResponse[1].body.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Transaction ok?" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[0].body.success</stringProp>
            <stringProp name="EXPECTED_VALUE">true</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0306 - REWARD CARD : BATCH TRANSACTION LINE ">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/actions/custom/flow/Loyalty_Run_TransactionLine_Batch</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;inputs&quot; : [{&#xd;
        &quot;Input1&quot;:&quot;&quot;&#xd;
        }&#xd;
    ] &#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0307 - REWARD CARD : BATCH CARD GENERATOR " enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/actions/custom/batchJobAction/Pending_TransactionJournal</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;inputs&quot; : [{&#xd;
        &quot;flow_IsPreviousCycle&quot;: false&#xd;
    }] &#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${TimerBatch}</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0308 - REWARD CARD : REWARD VERIFICATION ?" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Id, Name, Card_State__c, Contact.account.Gigya_ID__c, Position__c FROM MemberBenefit WHERE Name = &apos;REWARD&apos; AND Transaction_Journal__c != null AND Contact.Account.Gigya_ID__c =&apos;${GIGYA}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;ref22&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">${TimerCallAfterBatch}</stringProp>
          </ConstantTimer>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[0].body.records[0].Name</stringProp>
            <stringProp name="EXPECTED_VALUE">Reward</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="04 - EXCLUSIVITY CARD" enabled="true">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">startnextloop</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
          <collectionProp name="UserParameters.names">
            <stringProp name="67815789">GIGYA</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="102378257">
              <stringProp name="938932639">${SourceSystemId}|${UID}</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="UserParameters.per_iteration">true</boolProp>
        </UserParameters>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0400 - EXCLUSIVITY CARD : MEMBER GRIDS" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Id FROM RecordType WHERE sObjectType=&apos;Account&apos; AND DeveloperName=&apos;PersonAccount&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;rtRef&quot;&#xd;
        },&#xd;
        {&#xd;
           &quot;method&quot;: &quot;PATCH&quot;,&#xd;
           &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/account/Gigya_ID__c/${GIGYA}&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;BelongsToLaCollection__c&quot; : true,&#xd;
                &quot;LaCollection_MarketId__c&quot; : &quot;${MarketId}&quot;,&#xd;
                &quot;recordTypeId&quot; : &quot;@{rtRef.records[0].Id}&quot;,&#xd;
                &quot;PersonEmail&quot; : &quot;${PersonEmail}&quot;&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;accountRef&quot;&#xd;
        },&#xd;
&#xd;
        {&#xd;
           &quot;method&quot;: &quot;PATCH&quot;,&#xd;
           &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/CustomerSource__c/UniqueKey__c/${SourceSystemId}-${UID}&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;SourceSystemId__c&quot; : &quot;${SourceSystemId}&quot;,&#xd;
                &quot;Id__c&quot; : &quot;${UID}&quot;,&#xd;
                &quot;Client__r&quot;: {&#xd;
                    &quot;Gigya_id__c&quot; : &quot;${GIGYA}&quot;&#xd;
                }&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;customerSourceRef&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Member created?" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[1].body.success</stringProp>
            <stringProp name="EXPECTED_VALUE">true</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0401 - EXCLUSIVITY CARD : POST T&amp;CS" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/LoyaltyProgramMember/MembershipNumber/${GIGYA}?fields=Id&quot;,&#xd;
            &quot;referenceId&quot; : &quot;memberRef&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Id FROM LoyaltyMemberTier WHERE LoyaltyMemberId = &apos;@{memberRef.Id}&apos; AND CycleActive__c=true&quot;,&#xd;
            &quot;referenceId&quot; : &quot;mtRef&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;method&quot;: &quot;PATCH&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/loyaltymembertier/id/@{mtRef.records[0].Id}&quot;,&#xd;
            &quot;referenceId&quot; : &quot;mtUpdateRef&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;OptIn_TermsConditions__c&quot; : true&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;method&quot;: &quot;PATCH&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/LoyaltyProgramMember/MembershipNumber/${GIGYA}&quot;,&#xd;
            &quot;referenceId&quot; : &quot;memberRefUpdate&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;Language__c&quot; : &quot;FR&quot;&#xd;
            }&#xd;
       }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Language updated?" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[3].body.success</stringProp>
            <stringProp name="EXPECTED_VALUE">true</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="T&amp;C Updated?" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[2].body.success</stringProp>
            <stringProp name="EXPECTED_VALUE">true</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">500</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0402 - EXCLUSIVITY CARD : EXCLUSIVITY TRANSACTION" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
		&#xd;
        {&#xd;
           &quot;method&quot;: &quot;PATCH&quot;,&#xd;
           &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/transaction__c/TransactionNumber__c/T-${GIGYA}&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;CustomerSourceSystemId__c&quot; : &quot;${SourceSystemId}&quot;,&#xd;
                &quot;CustomerSourceId__c&quot; : &quot;${UID}&quot;,&#xd;
               &quot;CodeBoutiqueTechnical__c&quot; : &quot;A1&quot;,&#xd;
                &quot;CreationTimeStamp__c&quot; : &quot;${__time(YYYY-MM-dd,)}T00:00:00.000+0000&quot;&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;transactionRef&quot;&#xd;
        },&#xd;
	   {&#xd;
            &quot;method&quot;: &quot;PATCH&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/ccc_product__c/ExternalId__c/Jmeter-${GIGYA}&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;Name__c&quot;: &quot;Jmeter-${GIGYA}&quot;,&#xd;
                &quot;SKU__c&quot;: &quot;${SKU_EXCLUSIVITY}&quot;,&#xd;
                &quot;Type__c&quot; : &quot;SellProduct&quot;,&#xd;
                &quot;Line__c&quot;: &quot;P1&quot;&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;productRef&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;method&quot;: &quot;PATCH&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/TransactionLine__c/TransactionLineNumber__c/Line-${GIGYA}&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;Transaction__r&quot; : {&#xd;
                    &quot;TransactionNumber__c&quot; : &quot;T-${GIGYA}&quot;&#xd;
                },&#xd;
                &quot;Product__c&quot; : &quot;@{productRef.id}&quot;,&#xd;
                &quot;Quantity__c&quot; : 1,&#xd;
                &quot;Currency_Code__c&quot; : &quot;EUR&quot;,&#xd;
                &quot;DivisionCode__c&quot; : &quot;FNB&quot;,&#xd;
                &quot;NetRevenueTaxEUR__c&quot; : 50,&#xd;
                &quot;AdvisorCode__c&quot;: &quot;A1126&quot;&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;transactionLineRef&quot;&#xd;
        }&#xd;
       &#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Extract TransactionLineId" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">IdTransactionLine</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.compositeResponse[1].body.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Transaction ok?" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[0].body.success</stringProp>
            <stringProp name="EXPECTED_VALUE">true</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0403 - EXCLUSIVITY CARD : BATCH TRANSACTION LINE">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/actions/custom/flow/Loyalty_Run_TransactionLine_Batch</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;inputs&quot; : [{&#xd;
        &quot;Input1&quot;:&quot;&quot;&#xd;
        }&#xd;
    ] &#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe">
            <stringProp name="ConstantTimer.delay">3000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0404 - EXCLUSIVITY CARD : BATCH CARD GENERATOR  ">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/actions/custom/batchJobAction/Pending_TransactionJournal</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;inputs&quot; : [{&#xd;
        &quot;flow_IsPreviousCycle&quot;: false&#xd;
    }] &#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer">
            <stringProp name="ConstantTimer.delay">${TimerBatch}</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0405 - EXCLUSIVITY CARD : ACE VERIFICATION ?" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Id, Name, Card_State__c, Contact.account.Gigya_ID__c, Position__c FROM MemberBenefit WHERE Name = &apos;EXCLUSIVITY_PURCHASE&apos; AND Transaction_Journal__c != null AND Contact.Account.Gigya_ID__c =&apos;${GIGYA}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;ref22&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">${TimerCallAfterBatch}</stringProp>
          </ConstantTimer>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[0].body.records[0].Name</stringProp>
            <stringProp name="EXPECTED_VALUE">EXCLUSIVITY_PURCHASE</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="05 - REFILL CARD" enabled="true">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">startnextloop</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
          <collectionProp name="UserParameters.names">
            <stringProp name="67815789">GIGYA</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="102378257">
              <stringProp name="938932639">${SourceSystemId}|${UID}</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="UserParameters.per_iteration">true</boolProp>
        </UserParameters>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0501 - REFILL ACE : MEMBER GRIDS" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Id FROM RecordType WHERE sObjectType=&apos;Account&apos; AND DeveloperName=&apos;PersonAccount&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;rtRef&quot;&#xd;
        },&#xd;
        {&#xd;
           &quot;method&quot;: &quot;PATCH&quot;,&#xd;
           &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/account/Gigya_ID__c/${GIGYA}&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;BelongsToLaCollection__c&quot; : true,&#xd;
                &quot;LaCollection_MarketId__c&quot; : &quot;${MarketId}&quot;,&#xd;
                &quot;recordTypeId&quot; : &quot;@{rtRef.records[0].Id}&quot;,&#xd;
                &quot;PersonEmail&quot; : &quot;${PersonEmail}&quot;&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;accountRef&quot;&#xd;
        },&#xd;
&#xd;
        {&#xd;
           &quot;method&quot;: &quot;PATCH&quot;,&#xd;
           &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/CustomerSource__c/UniqueKey__c/${SourceSystemId}-${UID}&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;SourceSystemId__c&quot; : &quot;${SourceSystemId}&quot;,&#xd;
                &quot;Id__c&quot; : &quot;${UID}&quot;,&#xd;
                &quot;Client__r&quot;: {&#xd;
                    &quot;Gigya_id__c&quot; : &quot;${GIGYA}&quot;&#xd;
                }&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;customerSourceRef&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Member created?" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[1].body.success</stringProp>
            <stringProp name="EXPECTED_VALUE">true</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0502 - REFILL ACE : POST T&amp;CS" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/LoyaltyProgramMember/MembershipNumber/${GIGYA}?fields=Id&quot;,&#xd;
            &quot;referenceId&quot; : &quot;memberRef&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Id FROM LoyaltyMemberTier WHERE LoyaltyMemberId = &apos;@{memberRef.Id}&apos; AND CycleActive__c=true&quot;,&#xd;
            &quot;referenceId&quot; : &quot;mtRef&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;method&quot;: &quot;PATCH&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/loyaltymembertier/id/@{mtRef.records[0].Id}&quot;,&#xd;
            &quot;referenceId&quot; : &quot;mtUpdateRef&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;OptIn_TermsConditions__c&quot; : true&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;method&quot;: &quot;PATCH&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/LoyaltyProgramMember/MembershipNumber/${GIGYA}&quot;,&#xd;
            &quot;referenceId&quot; : &quot;memberRefUpdate&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;Language__c&quot; : &quot;FR&quot;&#xd;
            }&#xd;
       }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Language updated?" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[3].body.success</stringProp>
            <stringProp name="EXPECTED_VALUE">true</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="T&amp;C Updated?" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[2].body.success</stringProp>
            <stringProp name="EXPECTED_VALUE">true</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">500</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0503 - REFILL ACE : REFILL TRANSACTION" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
		&#xd;
        {&#xd;
           &quot;method&quot;: &quot;PATCH&quot;,&#xd;
           &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/transaction__c/TransactionNumber__c/T-${GIGYA}&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;CustomerSourceSystemId__c&quot; : &quot;${SourceSystemId}&quot;,&#xd;
                &quot;CustomerSourceId__c&quot; : &quot;${UID}&quot;,&#xd;
               &quot;CodeBoutiqueTechnical__c&quot; : &quot;A1&quot;,&#xd;
                &quot;CreationTimeStamp__c&quot; : &quot;${__time(YYYY-MM-dd,)}T00:00:00.000+0000&quot;&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;transactionRef&quot;&#xd;
        },&#xd;
	   {&#xd;
            &quot;method&quot;: &quot;PATCH&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/ccc_product__c/ExternalId__c/Jmeter-${GIGYA}&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;Name__c&quot;: &quot;Jmeter-${GIGYA}&quot;,&#xd;
                &quot;SKU__c&quot;: &quot;${SKU_REFILL}&quot;,&#xd;
                &quot;Type__c&quot; : &quot;SellProduct&quot;,&#xd;
                &quot;Line__c&quot;: &quot;P1&quot;&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;productRef&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;method&quot;: &quot;PATCH&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/TransactionLine__c/TransactionLineNumber__c/Line-${GIGYA}&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;Transaction__r&quot; : {&#xd;
                    &quot;TransactionNumber__c&quot; : &quot;T-${GIGYA}&quot;&#xd;
                },&#xd;
                &quot;Product__c&quot; : &quot;@{productRef.id}&quot;,&#xd;
                &quot;Quantity__c&quot; : 1,&#xd;
                &quot;Currency_Code__c&quot; : &quot;EUR&quot;,&#xd;
                &quot;DivisionCode__c&quot; : &quot;FNB&quot;,&#xd;
                &quot;NetRevenueTaxEUR__c&quot; : 50,&#xd;
                &quot;AdvisorCode__c&quot;: &quot;A1126&quot;&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;transactionLineRef&quot;&#xd;
        }&#xd;
       &#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Extract TransactionLineId" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">IdTransactionLine</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.compositeResponse[1].body.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Transaction ok?" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[0].body.success</stringProp>
            <stringProp name="EXPECTED_VALUE">true</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0504 - REFILL ACE : BATCH TRANSACTION LINE" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/actions/custom/flow/Loyalty_Run_TransactionLine_Batch</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;inputs&quot; : [{&#xd;
        &quot;Input1&quot;:&quot;&quot;&#xd;
        }&#xd;
    ] &#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">3000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0505 - REFILL ACE : BATCH CARD GENERATOR" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/actions/custom/batchJobAction/Pending_TransactionJournal</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;inputs&quot; : [{&#xd;
        &quot;flow_IsPreviousCycle&quot;: false&#xd;
    }] &#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${TimerBatch}</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0506 - REFILL ACE : ACE VERIFICATION ?" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Id, Name, Card_State__c, Contact.account.Gigya_ID__c, Position__c FROM MemberBenefit WHERE Name = &apos;REFILL&apos; AND Transaction_Journal__c != null AND Contact.Account.Gigya_ID__c =&apos;${GIGYA}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;ref22&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">${TimerCallAfterBatch}</stringProp>
          </ConstantTimer>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[0].body.records[0].Name</stringProp>
            <stringProp name="EXPECTED_VALUE">REFILL</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="06 - CROSS AXIS CARD" enabled="true">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">startnextloop</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="Global parameters">
          <collectionProp name="UserParameters.names">
            <stringProp name="67815789">GIGYA</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="102378257">
              <stringProp name="938932639">${SourceSystemId}|${UID}</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="UserParameters.per_iteration">true</boolProp>
        </UserParameters>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0601 - CROSS AXIS CARD : MEMBER GRIDS" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Id FROM RecordType WHERE sObjectType=&apos;Account&apos; AND DeveloperName=&apos;PersonAccount&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;rtRef&quot;&#xd;
        },&#xd;
        {&#xd;
           &quot;method&quot;: &quot;PATCH&quot;,&#xd;
           &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/account/Gigya_ID__c/${GIGYA}&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;BelongsToLaCollection__c&quot; : true,&#xd;
                &quot;LaCollection_MarketId__c&quot; : &quot;${MarketId}&quot;,&#xd;
                &quot;recordTypeId&quot; : &quot;@{rtRef.records[0].Id}&quot;,&#xd;
                &quot;PersonEmail&quot; : &quot;${PersonEmail}&quot;&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;accountRef&quot;&#xd;
        },&#xd;
&#xd;
        {&#xd;
           &quot;method&quot;: &quot;PATCH&quot;,&#xd;
           &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/CustomerSource__c/UniqueKey__c/${SourceSystemId}-${UID}&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;SourceSystemId__c&quot; : &quot;${SourceSystemId}&quot;,&#xd;
                &quot;Id__c&quot; : &quot;${UID}&quot;,&#xd;
                &quot;Client__r&quot;: {&#xd;
                    &quot;Gigya_id__c&quot; : &quot;${GIGYA}&quot;&#xd;
                }&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;customerSourceRef&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Member created?" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[1].body.success</stringProp>
            <stringProp name="EXPECTED_VALUE">true</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0602 - CROSS AXIS CARD : POST T&amp;CS" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/LoyaltyProgramMember/MembershipNumber/${GIGYA}?fields=Id&quot;,&#xd;
            &quot;referenceId&quot; : &quot;memberRef&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Id FROM LoyaltyMemberTier WHERE LoyaltyMemberId = &apos;@{memberRef.Id}&apos; AND CycleActive__c=true&quot;,&#xd;
            &quot;referenceId&quot; : &quot;mtRef&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;method&quot;: &quot;PATCH&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/loyaltymembertier/id/@{mtRef.records[0].Id}&quot;,&#xd;
            &quot;referenceId&quot; : &quot;mtUpdateRef&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;OptIn_TermsConditions__c&quot; : true&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;method&quot;: &quot;PATCH&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/LoyaltyProgramMember/MembershipNumber/${GIGYA}&quot;,&#xd;
            &quot;referenceId&quot; : &quot;memberRefUpdate&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;Language__c&quot; : &quot;FR&quot;&#xd;
            }&#xd;
       }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Language updated?" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[3].body.success</stringProp>
            <stringProp name="EXPECTED_VALUE">true</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="T&amp;C Updated?" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[2].body.success</stringProp>
            <stringProp name="EXPECTED_VALUE">true</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">500</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0603 - CROSS AXIS CARD : MAKE UP TRANSACTION 1" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
           &quot;method&quot;: &quot;PATCH&quot;,&#xd;
           &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/transaction__c/TransactionNumber__c/${UID}_CA1&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                 &quot;CustomerSourceSystemId__c&quot; : &quot;${SourceSystemId}&quot;,&#xd;
                &quot;CustomerSourceId__c&quot; : &quot;${UID}&quot;,&#xd;
                  &quot;CodeBoutiqueTechnical__c&quot; : &quot;A1&quot;,&#xd;
                &quot;CreationTimeStamp__c&quot; : &quot;${__time(yyyy-MM-dd)}T00:00:00.000+0000&quot;&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;transactionRef&quot;&#xd;
        }      &#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">3000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0604 - CROSS AXIS CARD : MAKE UP TRANSACTION LINE 1" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
 &#xd;
	   {&#xd;
            &quot;method&quot;: &quot;PATCH&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/ccc_product__c/ExternalId__c/Jmeter-${GIGYA}&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;Name__c&quot;: &quot;Jmeter-${GIGYA}&quot;,&#xd;
                &quot;SKU__c&quot;: &quot;${SKU_EXCLUSIVITY}&quot;,&#xd;
                &quot;Type__c&quot; : &quot;SellProduct&quot;,&#xd;
                &quot;Line__c&quot;: &quot;P1&quot;&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;productRef&quot;&#xd;
        },&#xd;
       {&#xd;
           &quot;method&quot;: &quot;PATCH&quot;,&#xd;
           &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/transactionLine__c/TransactionLineNumber__c/${UID}_CA1&quot;,&#xd;
			&quot;body&quot; : { &#xd;
		    	&quot;Transaction__r&quot; : {&#xd;
		    			&quot;TransactionNumber__c&quot; : &quot;${UID}_CA1&quot;&#xd;
		    	},&#xd;
		    	&#xd;
		    	 &quot;Product__c&quot; : &quot;@{productRef.id}&quot;,&#xd;
 			 &quot;NetRevenueTaxEUR__c&quot; : 350,&#xd;
		      &quot;Currency_Code__c&quot; : &quot;EUR&quot;,&#xd;
		    	 &quot;DivisionCode__c&quot; : &quot;FNB&quot;,&#xd;
		    	 &quot;AdvisorCode__c&quot;: &quot;A1126&quot;,&#xd;
		    	 &quot;Quantity__c&quot; : 1,&#xd;
		    	 &quot;ItemCategory__c&quot; : &quot;MAKE_UP&quot;&#xd;
&#xd;
		   &#xd;
		    	},&#xd;
            &quot;referenceId&quot; : &quot;testUn&quot;&#xd;
       }&#xd;
&#xd;
&#xd;
       &#xd;
      &#xd;
    ]&#xd;
}&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Extracteur JSON" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">IdTransactionLine</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.compositeResponse[1].body.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">300</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0605 - CROSS AXIS CARD : SKIN CARE TRANSACTION 2" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
           &quot;method&quot;: &quot;PATCH&quot;,&#xd;
           &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/transaction__c/TransactionNumber__c/${UID}_CA2&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;CustomerSourceSystemId__c&quot; : &quot;${SourceSystemId}&quot;,&#xd;
                &quot;CustomerSourceId__c&quot; : &quot;${UID}&quot;,&#xd;
                &quot;CodeBoutiqueTechnical__c&quot; : &quot;A1&quot;,&#xd;
                &quot;CreationTimeStamp__c&quot; : &quot;${__time(yyyy-MM-dd)}T00:00:00.000+0000&quot;&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;transactionRef&quot;&#xd;
        }      &#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Extracteur JSON" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">IdTransactionLine2</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.compositeResponse[1].body.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">6000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0606 - CROSS AXIS CARD : SKIN CARE TRANSACTION LINE 2" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
 &#xd;
	   {&#xd;
            &quot;method&quot;: &quot;PATCH&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/ccc_product__c/ExternalId__c/${GIGYA}&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;Name__c&quot;: &quot;Jmeter2-${GIGYA}&quot;,&#xd;
                &quot;SKU__c&quot;: &quot;${SKU_BEAUTY_ROUTINE}&quot;,&#xd;
                &quot;Type__c&quot; : &quot;SellProduct&quot;,&#xd;
                &quot;Line__c&quot;: &quot;P2&quot;&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;productRef&quot;&#xd;
        },&#xd;
       {&#xd;
           &quot;method&quot;: &quot;PATCH&quot;,&#xd;
           &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/transactionLine__c/TransactionLineNumber__c/${UID}_CA2&quot;,&#xd;
			&quot;body&quot; : { &#xd;
		    	&quot;Transaction__r&quot; : {&#xd;
		    			&quot;TransactionNumber__c&quot; : &quot;${UID}_CA2&quot;&#xd;
		    	},&#xd;
		    	&#xd;
		    	&quot;Product__c&quot; : &quot;@{productRef.id}&quot;,&#xd;
 			&quot;NetRevenueTaxEUR__c&quot; : 150,&#xd;
		    	&quot;Currency_Code__c&quot; : &quot;EUR&quot;,&#xd;
		    	&quot;DivisionCode__c&quot; : &quot;FNB&quot;,&#xd;
		    	&quot;AdvisorCode__c&quot;: &quot;A1126&quot;,&#xd;
		    	&quot;Quantity__c&quot; : 1,&#xd;
		    	&quot;ItemCategory__c&quot; : &quot;SKIN_CARE&quot;&#xd;
&#xd;
		   &#xd;
		    	},&#xd;
            &quot;referenceId&quot; : &quot;testUn&quot;&#xd;
       }&#xd;
&#xd;
&#xd;
       &#xd;
      &#xd;
    ]&#xd;
}&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Extracteur JSON" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">IdTransactionLine2</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.compositeResponse[1].body.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0606 - CROSS AXIS CARD : BATCH TRANSACTION LINE ">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/actions/custom/flow/Loyalty_Run_TransactionLine_Batch</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;inputs&quot; : [{&#xd;
        &quot;Input1&quot;:&quot;&quot;&#xd;
        }&#xd;
    ] &#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0608 - CROSS AXIS CARD : BATCH CARD GENERATOR  ">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/actions/custom/batchJobAction/Pending_TransactionJournal</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;inputs&quot; : [{&#xd;
        &quot;flow_IsPreviousCycle&quot;: false&#xd;
    }] &#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer">
            <stringProp name="ConstantTimer.delay">${TimerBatch}</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0609 - CROSS AXIS CARD : ACE VERIFICATION ?">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Id, Name, Card_State__c, Contact.account.Gigya_ID__c, Position__c FROM MemberBenefit WHERE Name = &apos;THREE_AXES_PURCHASE&apos; AND Transaction_Journal__c != null AND Contact.Account.Gigya_ID__c =&apos;${GIGYA}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;ref22&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe">
            <stringProp name="ConstantTimer.delay">${TimerCallAfterBatch}</stringProp>
          </ConstantTimer>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion">
            <stringProp name="JSON_PATH">$.compositeResponse[0].body.records[0].Name</stringProp>
            <stringProp name="EXPECTED_VALUE">THREE_AXES_PURCHASE</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="07 - 2D  PURCHASE CARD" enabled="true">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">startnextloop</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
          <collectionProp name="UserParameters.names">
            <stringProp name="67815789">GIGYA</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="102378257">
              <stringProp name="938932639">${SourceSystemId}|${UID}</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="UserParameters.per_iteration">true</boolProp>
        </UserParameters>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0700 - 2D  PURCHASE CARD : MEMBER GRIDS" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Id FROM RecordType WHERE sObjectType=&apos;Account&apos; AND DeveloperName=&apos;PersonAccount&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;rtRef&quot;&#xd;
        },&#xd;
        {&#xd;
           &quot;method&quot;: &quot;PATCH&quot;,&#xd;
           &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/account/Gigya_ID__c/${GIGYA}&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;BelongsToLaCollection__c&quot; : true,&#xd;
                &quot;LaCollection_MarketId__c&quot; : &quot;${MarketId}&quot;,&#xd;
                &quot;recordTypeId&quot; : &quot;@{rtRef.records[0].Id}&quot;,&#xd;
                &quot;PersonEmail&quot; : &quot;${PersonEmail}&quot;&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;accountRef&quot;&#xd;
        },&#xd;
&#xd;
        {&#xd;
           &quot;method&quot;: &quot;PATCH&quot;,&#xd;
           &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/CustomerSource__c/UniqueKey__c/${SourceSystemId}-${UID}&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;SourceSystemId__c&quot; : &quot;${SourceSystemId}&quot;,&#xd;
                &quot;Id__c&quot; : &quot;${UID}&quot;,&#xd;
                &quot;Client__r&quot;: {&#xd;
                    &quot;Gigya_id__c&quot; : &quot;${GIGYA}&quot;&#xd;
                }&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;customerSourceRef&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Member created?" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[1].body.success</stringProp>
            <stringProp name="EXPECTED_VALUE">true</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0701 - 2D  PURCHASE CARD : POST T&amp;CS" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/LoyaltyProgramMember/MembershipNumber/${GIGYA}?fields=Id&quot;,&#xd;
            &quot;referenceId&quot; : &quot;memberRef&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Id FROM LoyaltyMemberTier WHERE LoyaltyMemberId = &apos;@{memberRef.Id}&apos; AND CycleActive__c=true&quot;,&#xd;
            &quot;referenceId&quot; : &quot;mtRef&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;method&quot;: &quot;PATCH&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/loyaltymembertier/id/@{mtRef.records[0].Id}&quot;,&#xd;
            &quot;referenceId&quot; : &quot;mtUpdateRef&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;OptIn_TermsConditions__c&quot; : true&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;method&quot;: &quot;PATCH&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/LoyaltyProgramMember/MembershipNumber/${GIGYA}&quot;,&#xd;
            &quot;referenceId&quot; : &quot;memberRefUpdate&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;Language__c&quot; : &quot;FR&quot;&#xd;
            }&#xd;
       }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Language updated?" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[3].body.success</stringProp>
            <stringProp name="EXPECTED_VALUE">true</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="T&amp;C Updated?" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[2].body.success</stringProp>
            <stringProp name="EXPECTED_VALUE">true</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">500</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0702 - 2D  PURCHASE CARD : EXCLUSIVITY TRANSACTION" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
		&#xd;
        {&#xd;
           &quot;method&quot;: &quot;PATCH&quot;,&#xd;
           &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/transaction__c/TransactionNumber__c/T-${GIGYA}&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;CustomerSourceSystemId__c&quot; : &quot;${SourceSystemId}&quot;,&#xd;
                &quot;CustomerSourceId__c&quot; : &quot;${UID}&quot;,&#xd;
               &quot;CodeBoutiqueTechnical__c&quot; : &quot;A1&quot;,&#xd;
                &quot;CreationTimeStamp__c&quot; : &quot;${__time(YYYY-MM-dd,)}T00:00:00.000+0000&quot;&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;transactionRef&quot;&#xd;
        },&#xd;
	   {&#xd;
            &quot;method&quot;: &quot;PATCH&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/ccc_product__c/ExternalId__c/Jmeter-${GIGYA}&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;Name__c&quot;: &quot;Jmeter-${GIGYA}&quot;,&#xd;
                &quot;SKU__c&quot;: &quot;${SKU_EXCLUSIVITY}&quot;,&#xd;
                &quot;Type__c&quot; : &quot;SellProduct&quot;,&#xd;
                &quot;Line__c&quot;: &quot;P1&quot;&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;productRef&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;method&quot;: &quot;PATCH&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/TransactionLine__c/TransactionLineNumber__c/Line-${GIGYA}&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;Transaction__r&quot; : {&#xd;
                    &quot;TransactionNumber__c&quot; : &quot;T-${GIGYA}&quot;&#xd;
                },&#xd;
                &quot;Product__c&quot; : &quot;@{productRef.id}&quot;,&#xd;
                &quot;Quantity__c&quot; : 1,&#xd;
                &quot;Currency_Code__c&quot; : &quot;EUR&quot;,&#xd;
                &quot;DivisionCode__c&quot; : &quot;FNB&quot;,&#xd;
                &quot;NetRevenueTaxEUR__c&quot; : 50,&#xd;
                &quot;AdvisorCode__c&quot;: &quot;A1126&quot;&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;transactionLineRef&quot;&#xd;
        }&#xd;
       &#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Extract TransactionLineId" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">IdTransactionLine</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.compositeResponse[1].body.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Transaction ok?" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[0].body.success</stringProp>
            <stringProp name="EXPECTED_VALUE">true</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0704 - 2D  PURCHASE CARD : BATCH TRANSACTION LINE " enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/actions/custom/flow/Loyalty_Run_TransactionLine_Batch</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;inputs&quot; : [{&#xd;
        &quot;Input1&quot;:&quot;&quot;&#xd;
        }&#xd;
    ] &#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0705 - 2D  PURCHASE CARD : BATCH CARD GENERATOR " enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/actions/custom/batchJobAction/Pending_TransactionJournal</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;inputs&quot; : [{&#xd;
        &quot;flow_IsPreviousCycle&quot;: false&#xd;
    }] &#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">40000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="0706 - 2D  PURCHASE CARD : SET DATE TRANSACTION 2" enabled="true">
          <stringProp name="TestPlan.comments">https://groups.google.com/g/ptgram24/c/mlzN50tLQBI?pli=1</stringProp>
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="script">import java.time.LocalDate

def date = LocalDate.now()

def day = date.getDayOfMonth()
def month = date.getMonthValue()
def year = date.getYear()

// J+1

def newDate = &quot;${year}-${month}-${day+1}&quot;
SampleResult.setResponseData(&quot;newDate: &quot; + newDate, &quot;UTF-8&quot;)

vars.put(&quot;purchaseDate&quot;, newDate)</stringProp>
          <stringProp name="scriptLanguage">groovy</stringProp>
        </JSR223Sampler>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0707 - 2D  PURCHASE CARD : REFILL TRANSACTION " enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
		&#xd;
        {&#xd;
           &quot;method&quot;: &quot;PATCH&quot;,&#xd;
           &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/transaction__c/TransactionNumber__c/T2-${GIGYA}&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;CustomerSourceSystemId__c&quot; : &quot;${SourceSystemId}&quot;,&#xd;
                &quot;CustomerSourceId__c&quot; : &quot;${UID}&quot;,&#xd;
               &quot;CodeBoutiqueTechnical__c&quot; : &quot;A1&quot;,&#xd;
                &quot;CreationTimeStamp__c&quot; : &quot;${purchaseDate}T00:00:00.000+0000&quot;&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;transactionRef&quot;&#xd;
        },&#xd;
	   {&#xd;
            &quot;method&quot;: &quot;PATCH&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/ccc_product__c/ExternalId__c/Jmeter2-${GIGYA}&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;Name__c&quot;: &quot;Jmeter2-${GIGYA}&quot;,&#xd;
                &quot;SKU__c&quot;: &quot;${SKU_REFILL}&quot;,&#xd;
                &quot;Type__c&quot; : &quot;SellProduct&quot;,&#xd;
                &quot;Line__c&quot;: &quot;P1&quot;&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;productRef&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;method&quot;: &quot;PATCH&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/TransactionLine__c/TransactionLineNumber__c/Line2-${GIGYA}&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;Transaction__r&quot; : {&#xd;
                    &quot;TransactionNumber__c&quot; : &quot;T2-${GIGYA}&quot;&#xd;
                },&#xd;
                &quot;Product__c&quot; : &quot;@{productRef.id}&quot;,&#xd;
                &quot;Quantity__c&quot; : 1,&#xd;
                &quot;Currency_Code__c&quot; : &quot;EUR&quot;,&#xd;
                &quot;DivisionCode__c&quot; : &quot;FNB&quot;,&#xd;
                &quot;NetRevenueTaxEUR__c&quot; : 50,&#xd;
                &quot;AdvisorCode__c&quot;: &quot;A1126&quot;&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;transactionLineRef&quot;&#xd;
        }&#xd;
       &#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Extract TransactionLineId" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">IdTransactionLine</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.compositeResponse[1].body.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0708 - 2D  PURCHASE CARD : BATCH TRANSACTION LINE " enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/actions/custom/flow/Loyalty_Run_TransactionLine_Batch</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;inputs&quot; : [{&#xd;
        &quot;Input1&quot;:&quot;&quot;&#xd;
        }&#xd;
    ] &#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0709 - 2D  PURCHASE CARD : BATCH CARD GENERATOR" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/actions/custom/batchJobAction/Pending_TransactionJournal</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;inputs&quot; : [{&#xd;
        &quot;flow_IsPreviousCycle&quot;: false&#xd;
    }] &#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${TimerBatch}</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0710 - 2D  PURCHASE CARD : ACE VERIFICATION ?" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Id, Name, Card_State__c, Contact.account.Gigya_ID__c, Position__c FROM MemberBenefit WHERE Name = &apos;2D_PURCHASE_X_DAYS&apos; AND Transaction_Journal__c != null AND Contact.Account.Gigya_ID__c =&apos;${GIGYA}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;ref22&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">${TimerCallAfterBatch}</stringProp>
          </ConstantTimer>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[0].body.records[0].Name</stringProp>
            <stringProp name="EXPECTED_VALUE">2D_PURCHASE_X_DAYS</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="08 - BIRTHDAY CARD : BIRTHDAY = AFTER ENROLLMENT DATE " enabled="true">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">startnextloop</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
          <collectionProp name="UserParameters.names">
            <stringProp name="67815789">GIGYA</stringProp>
            <stringProp name="1069376125">birthday</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="-209561123">
              <stringProp name="938932639">${SourceSystemId}|${UID}</stringProp>
              <stringProp name="75817148">${__time(YYYY-MM-dd,)}</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="UserParameters.per_iteration">true</boolProp>
        </UserParameters>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0800 - BIRTHDAY CARD : MEMBER GRIDS" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Id FROM RecordType WHERE sObjectType=&apos;Account&apos; AND DeveloperName=&apos;PersonAccount&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;rtRef&quot;&#xd;
        },&#xd;
        {&#xd;
           &quot;method&quot;: &quot;PATCH&quot;,&#xd;
           &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/account/Gigya_ID__c/${GIGYA}&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;BelongsToLaCollection__c&quot; : true,&#xd;
                &quot;LaCollection_MarketId__c&quot; : &quot;${MarketId}&quot;,&#xd;
                &quot;recordTypeId&quot; : &quot;@{rtRef.records[0].Id}&quot;,&#xd;
                &quot;PersonEmail&quot; : &quot;${PersonEmail}&quot;&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;accountRef&quot;&#xd;
        },&#xd;
&#xd;
        {&#xd;
           &quot;method&quot;: &quot;PATCH&quot;,&#xd;
           &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/CustomerSource__c/UniqueKey__c/${SourceSystemId}-${UID}&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;SourceSystemId__c&quot; : &quot;${SourceSystemId}&quot;,&#xd;
                &quot;Id__c&quot; : &quot;${UID}&quot;,&#xd;
                &quot;Client__r&quot;: {&#xd;
                    &quot;Gigya_id__c&quot; : &quot;${GIGYA}&quot;&#xd;
                }&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;customerSourceRef&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Member created?" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[1].body.success</stringProp>
            <stringProp name="EXPECTED_VALUE">true</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0801 - BIRTHDAY CARD : POST T&amp;CS" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/LoyaltyProgramMember/MembershipNumber/${GIGYA}?fields=Id&quot;,&#xd;
            &quot;referenceId&quot; : &quot;memberRef&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Id FROM LoyaltyMemberTier WHERE LoyaltyMemberId = &apos;@{memberRef.Id}&apos; AND CycleActive__c=true&quot;,&#xd;
            &quot;referenceId&quot; : &quot;mtRef&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;method&quot;: &quot;PATCH&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/loyaltymembertier/id/@{mtRef.records[0].Id}&quot;,&#xd;
            &quot;referenceId&quot; : &quot;mtUpdateRef&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;OptIn_TermsConditions__c&quot; : true&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;method&quot;: &quot;PATCH&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/LoyaltyProgramMember/MembershipNumber/${GIGYA}&quot;,&#xd;
            &quot;referenceId&quot; : &quot;memberRefUpdate&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;Language__c&quot; : &quot;FR&quot;&#xd;
            }&#xd;
       }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Language updated?" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[3].body.success</stringProp>
            <stringProp name="EXPECTED_VALUE">true</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="T&amp;C Updated?" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[2].body.success</stringProp>
            <stringProp name="EXPECTED_VALUE">true</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">500</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0802 - BIRTHDAY CARD : ACE CHECK NOT YET CREATED" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Id, Name, Card_State__c, Contact.account.Gigya_ID__c, Position__c FROM MemberBenefit WHERE Name = &apos;BIRTHDAY&apos; AND Transaction_Journal__c != null AND Contact.Account.Gigya_ID__c =&apos;${GIGYA}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;ref22&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Ace Exists?" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[0].body.totalSize</stringProp>
            <stringProp name="EXPECTED_VALUE">0</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0803 - BIRTHDAY CARD : BIRTHDAY UPDATED" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
           &quot;method&quot;: &quot;PATCH&quot;,&#xd;
           &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/account/Gigya_ID__c/${GIGYA}&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;PersonBirthdate&quot;: &quot;${birthday}&quot;&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;accountRef&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Birthday updated?" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[0].body.success</stringProp>
            <stringProp name="EXPECTED_VALUE">true</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0804 - BIRTHDAY CARD : ACE VERIFICATION ?" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Id, Name, Card_State__c, Contact.account.Gigya_ID__c, Position__c FROM MemberBenefit WHERE Name = &apos;BIRTHDAY&apos; AND Transaction_Journal__c != null AND Contact.Account.Gigya_ID__c =&apos;${GIGYA}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;ref22&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">10000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="09 - BIRTHDAY CARD : BIRTHDAY = ENROLLMENT DATE" enabled="true">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">startnextloop</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
          <collectionProp name="UserParameters.names">
            <stringProp name="67815789">GIGYA</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="102378257">
              <stringProp name="938932639">${SourceSystemId}|${UID}</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="UserParameters.per_iteration">true</boolProp>
        </UserParameters>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0900 - BIRTHDAY CARD : MEMBER GRIDS" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Id FROM RecordType WHERE sObjectType=&apos;Account&apos; AND DeveloperName=&apos;PersonAccount&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;rtRef&quot;&#xd;
        },&#xd;
        {&#xd;
           &quot;method&quot;: &quot;PATCH&quot;,&#xd;
           &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/account/Gigya_ID__c/${GIGYA}&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;BelongsToLaCollection__c&quot; : true,&#xd;
                &quot;LaCollection_MarketId__c&quot; : &quot;${MarketId}&quot;,&#xd;
                &quot;recordTypeId&quot; : &quot;@{rtRef.records[0].Id}&quot;,&#xd;
                &quot;PersonEmail&quot; : &quot;${PersonEmail}&quot;,&#xd;
                &quot;PersonBirthdate&quot;: &quot;${__timeShift(yyyy-MM-dd,,,,)}&quot;&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;accountRef&quot;&#xd;
        },&#xd;
&#xd;
        {&#xd;
           &quot;method&quot;: &quot;PATCH&quot;,&#xd;
           &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/CustomerSource__c/UniqueKey__c/${SourceSystemId}-${UID}&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;SourceSystemId__c&quot; : &quot;${SourceSystemId}&quot;,&#xd;
                &quot;Id__c&quot; : &quot;${UID}&quot;,&#xd;
                &quot;Client__r&quot;: {&#xd;
                    &quot;Gigya_id__c&quot; : &quot;${GIGYA}&quot;&#xd;
                }&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;customerSourceRef&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Member created?" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[1].body.success</stringProp>
            <stringProp name="EXPECTED_VALUE">true</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0901 - BIRTHDAY CARD : POST T&amp;CS" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/LoyaltyProgramMember/MembershipNumber/${GIGYA}?fields=Id&quot;,&#xd;
            &quot;referenceId&quot; : &quot;memberRef&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Id FROM LoyaltyMemberTier WHERE LoyaltyMemberId = &apos;@{memberRef.Id}&apos; AND CycleActive__c=true&quot;,&#xd;
            &quot;referenceId&quot; : &quot;mtRef&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;method&quot;: &quot;PATCH&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/loyaltymembertier/id/@{mtRef.records[0].Id}&quot;,&#xd;
            &quot;referenceId&quot; : &quot;mtUpdateRef&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;OptIn_TermsConditions__c&quot; : true&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;method&quot;: &quot;PATCH&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/LoyaltyProgramMember/MembershipNumber/${GIGYA}&quot;,&#xd;
            &quot;referenceId&quot; : &quot;memberRefUpdate&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;Language__c&quot; : &quot;FR&quot;&#xd;
            }&#xd;
       }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Language updated?" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[3].body.success</stringProp>
            <stringProp name="EXPECTED_VALUE">true</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="T&amp;C Updated?" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[2].body.success</stringProp>
            <stringProp name="EXPECTED_VALUE">true</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">500</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="0902 - BIRTHDAY CARD : ACE VERIFICATION ?" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Id, Name, Card_State__c, Contact.account.Gigya_ID__c, Position__c FROM MemberBenefit WHERE Name = &apos;BIRTHDAY&apos; AND Contact.Account.Gigya_ID__c =&apos;${GIGYA}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;ref22&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">10000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="10 - REFFRAL CARD : 1 REFERRER  - 1 REFERRED  (NOT MEMBER)" enabled="true">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
          <collectionProp name="UserParameters.names">
            <stringProp name="67815789">GIGYA</stringProp>
            <stringProp name="-1548945544">Language</stringProp>
            <stringProp name="1538415758">PersonEmailParrain</stringProp>
            <stringProp name="948796794">PersonEmailParraine1</stringProp>
            <stringProp name="948796795">PersonEmailParraine2</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="500790335">
              <stringProp name="938932639">${SourceSystemId}|${UID}</stringProp>
              <stringProp name="2252">FR</stringProp>
              <stringProp name="2106690120">malik.rachi+${__Random(1000,999999,)}@gmail.com</stringProp>
              <stringProp name="-886888636">malik.rachi+${__Random(1000,999999,)}@hotmai.com</stringProp>
              <stringProp name="-886888636">malik.rachi+${__Random(1000,999999,)}@hotmai.com</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="UserParameters.per_iteration">true</boolProp>
        </UserParameters>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1001 - REFFRAL CARD : MEMBER CREATION - REFERRER" enabled="true">
          <stringProp name="TestPlan.comments">A</stringProp>
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Id FROM RecordType WHERE sObjectType=&apos;Account&apos; AND DeveloperName=&apos;PersonAccount&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;rtRef&quot;&#xd;
        },&#xd;
        {&#xd;
           &quot;method&quot;: &quot;PATCH&quot;,&#xd;
           &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/account/Gigya_ID__c/${GIGYA}&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;BelongsToLaCollection__c&quot; : true,&#xd;
                &quot;LaCollection_MarketId__c&quot; : &quot;${MarketId}&quot;,&#xd;
                &quot;recordTypeId&quot; : &quot;@{rtRef.records[0].Id}&quot;,&#xd;
                &quot;PersonEmail&quot; : &quot;${PersonEmailParrain}&quot;&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;accountRef&quot;&#xd;
        },&#xd;
&#xd;
        {&#xd;
           &quot;method&quot;: &quot;PATCH&quot;,&#xd;
           &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/CustomerSource__c/UniqueKey__c/${SourceSystemId}-${UID}&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;SourceSystemId__c&quot; : &quot;${SourceSystemId}&quot;,&#xd;
                &quot;Id__c&quot; : &quot;${UID}&quot;,&#xd;
                &quot;Client__r&quot;: {&#xd;
                    &quot;Gigya_id__c&quot; : &quot;${GIGYA}&quot;&#xd;
                }&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;customerSourceRef&quot;&#xd;
        },&#xd;
         {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Position__c, Loyalty_Tier__r.SequenceNumber, MemberCycle__r.LoyaltyTierGroup.Name, MemberCycle__r.Cycle__c, MemberCycle__r.CycleActive__c, MemberCycle__r.CycleStartDate__c, MemberCycle__r.CycleEndDate__c, MemberId FROM MemberBenefit WHERE MemberCycle__r.LoyaltyMember.MembershipNumber=&apos;${GIGYA}&apos; AND MemberCycle__r.LoyaltyTierGroup.Name= &apos;${LoyaltyTierGroupName}&apos; AND MemberCycle__r.Cycle__c = 1 AND MemberCycle__r.CycleActive__c = true&quot;,&#xd;
            &quot;referenceId&quot; : &quot;memberTierRt&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="MemberId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">MemberId</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;Id\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="MemberIdBenefit" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">MemberIdBenefit</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;MemberId\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1002 - REFFRAL CARD : POST T&amp;CS" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/LoyaltyProgramMember/MembershipNumber/${GIGYA}?fields=Id&quot;,&#xd;
            &quot;referenceId&quot; : &quot;memberRef&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Id FROM LoyaltyMemberTier WHERE LoyaltyMemberId = &apos;@{memberRef.Id}&apos; AND CycleActive__c=true&quot;,&#xd;
            &quot;referenceId&quot; : &quot;mtRef&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;method&quot;: &quot;PATCH&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/loyaltymembertier/id/@{mtRef.records[0].Id}&quot;,&#xd;
            &quot;referenceId&quot; : &quot;mtUpdateRef&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;OptIn_TermsConditions__c&quot; : true&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;method&quot;: &quot;PATCH&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/LoyaltyProgramMember/MembershipNumber/${GIGYA}&quot;,&#xd;
            &quot;referenceId&quot; : &quot;memberRefUpdate&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;Language__c&quot; : &quot;${Language}&quot;&#xd;
            }&#xd;
       }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Language updated?" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[3].body.success</stringProp>
            <stringProp name="EXPECTED_VALUE">true</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">500</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1003 - REFFRAL CARD : POST REFERRAL FORM" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;PATCH&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/Lead/LaCollection_ExternalId__c/${GIGYA}+${PersonEmailParraine1}&quot;,&#xd;
            &quot;body&quot;: {&#xd;
                &quot;Email&quot;: &quot;${PersonEmailParraine1}&quot;,&#xd;
                &quot;Firstname&quot;: &quot;TEST&quot;,&#xd;
                &quot;Lastname&quot;: &quot;AUTO&quot;,&#xd;
                &quot;LeadSource&quot;: &quot;LaCollection&quot;&#xd;
                &#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;leadRef&quot;&#xd;
        }&#xd;
        ,&#xd;
        {&#xd;
            &quot;method&quot;: &quot;POST&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/transactionJournal/&quot;,&#xd;
            &quot;body&quot;: {&#xd;
                &quot;Origin&quot; : &quot;Referral Form&quot;,&#xd;
                &quot;Member&quot;: {&#xd;
                    &quot;MembershipNumber&quot;: &quot;${GIGYA}&quot;&#xd;
                }&#xd;
                ,&#xd;
                &quot;Referred__c&quot;: &quot;@{leadRef.id}&quot;&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;transactinjournalId&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1004 - REFFRAL CARD : GET CODE REFERRAL" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT ReferralCode FROM LoyaltyProgramMember where MembershipNumber=&apos;${GIGYA}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;RequestReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">3000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="ReferralCode" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">ReferralCode</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;ReferralCode\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1005 - REFFRAL CARD : MEMBER CREATION - REFERRED" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Id FROM RecordType WHERE sObjectType=&apos;Account&apos; AND DeveloperName=&apos;PersonAccount&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;rtRef&quot;&#xd;
        },&#xd;
        {&#xd;
           &quot;method&quot;: &quot;PATCH&quot;,&#xd;
           &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/account/Gigya_ID__c/${GIGYA}_Parraine&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;BelongsToLaCollection__c&quot; : true,&#xd;
                &quot;LaCollection_MarketId__c&quot; : &quot;${MarketId}&quot;,&#xd;
                &quot;recordTypeId&quot; : &quot;@{rtRef.records[0].Id}&quot;,&#xd;
                &quot;PersonEmail&quot; : &quot;${PersonEmailParraine1}&quot;&#xd;
              &#xd;
                 &#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;accountRef&quot;&#xd;
        }&#xd;
     &#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="MemberId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">MemberId</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;Id\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1006 - REFFRAL CARD : POST MEMBER - REFERRER CODE" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
       &#xd;
        {&#xd;
           &quot;method&quot;: &quot;GET&quot;,&#xd;
           &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/LoyaltyProgramMember/MembershipNumber/${GIGYA}_Parraine?fields=Id&quot;,&#xd;
           &quot;referenceId&quot; : &quot;memberRef&quot;&#xd;
        },&#xd;
        {&#xd;
           &quot;method&quot;: &quot;GET&quot;,&#xd;
           &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Id FROM LoyaltyMemberTier WHERE LoyaltyMemberId = &apos;@{memberRef.Id}&apos; AND CycleActive__c=true&quot;,&#xd;
           &quot;referenceId&quot; : &quot;mtRef&quot;&#xd;
        },&#xd;
        {&#xd;
           &quot;method&quot;: &quot;PATCH&quot;,&#xd;
           &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/loyaltymembertier/id/@{mtRef.records[0].Id}&quot;,&#xd;
           &quot;referenceId&quot; : &quot;mtUpdateRef&quot;,&#xd;
           &quot;body&quot; : { &#xd;
               &quot;OptIn_TermsConditions__c&quot; : true,&#xd;
                &quot;ReferrerCode__c&quot; : &quot;${ReferralCode}&quot;&#xd;
           &#xd;
            }&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="LoyaltyMemberId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">LoyaltyMemberId</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;Id\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1007 - REFFRAL CARD : REFERRED T&amp;CS = TRUE ?" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT OptIn_TermsConditions__c from LoyaltyMemberTier WHERE LoyaltyMemberId = &apos;${LoyaltyMemberId}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;OptinReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">3000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="OptIn_TermsConditions__c" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[0].body.records[0].OptIn_TermsConditions__c</stringProp>
            <stringProp name="EXPECTED_VALUE">true</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1008 - REFFRAL CARD : REFERRED BY ID = ID REFERRER ?" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT ReferredById from LoyaltyProgramMember WHERE MembershipNumber = &apos;${GIGYA}_Parraine&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;OptinReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">2000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="REFERREDID" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[0].body.records[0].ReferredById</stringProp>
            <stringProp name="EXPECTED_VALUE">${MemberIdBenefit}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1009 - REFFRAL CARD : REFERRAL NOTIFICATION  ?" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Type__c from TransactionJournal WHERE Type__c = &apos;Referral Notification&apos; AND MemberId = &apos;${MemberIdBenefit}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;LoyaltyMemberIdReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">3000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Type__c" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[0].body.records[0].Type__c</stringProp>
            <stringProp name="EXPECTED_VALUE">Referral Notification</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1010 - REFFRAL CARD : REFERRAL NOTIFICATION  IS PROCESSED ?" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Type__c from TransactionJournal WHERE Type__c =&apos;Referral Notification&apos; AND MemberId = &apos;${MemberIdBenefit}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;LoyaltyMemberIdReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">3000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Type__c" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[0].body.records[0].Type__c</stringProp>
            <stringProp name="EXPECTED_VALUE">Referral Notification</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1011 - REFFRAL CARD : REFERRAL INTERACTION JOURNAL = PROCESSED ?" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Status from TransactionJournal WHERE MemberId = &apos;${LoyaltyMemberId}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;LoyaltyMemberIdReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">3000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Status" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[0].body.records[0].Status</stringProp>
            <stringProp name="EXPECTED_VALUE">	
Processed</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1012 - REFFRAL CARD : REFERRAL ACE  ?" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Name from MemberBenefit WHERE ExternalId__c = &apos;${GIGYA}_1_2&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;CardReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">3000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="AceName" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[0].body.records[0].Name</stringProp>
            <stringProp name="EXPECTED_VALUE">	
REFERRAL</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="11 - REFFRAL CARD : 1 REFERRER  - 2 REFERRED  (NOT MEMBER)" enabled="true">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
          <collectionProp name="UserParameters.names">
            <stringProp name="-1548945544">Language</stringProp>
            <stringProp name="1538415758">PersonEmailParrain</stringProp>
            <stringProp name="948796794">PersonEmailParraine1</stringProp>
            <stringProp name="948796795">PersonEmailParraine2</stringProp>
            <stringProp name="67815789">GIGYA</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="1838743459">
              <stringProp name="2252">FR</stringProp>
              <stringProp name="2106690120">malik.rachi+${__Random(1000,999999,)}@gmail.com</stringProp>
              <stringProp name="-886888636">malik.rachi+${__Random(1000,999999,)}@hotmai.com</stringProp>
              <stringProp name="-886888636">malik.rachi+${__Random(1000,999999,)}@hotmai.com</stringProp>
              <stringProp name="938932639">${SourceSystemId}|${UID}</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="UserParameters.per_iteration">true</boolProp>
        </UserParameters>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1101 - REFFRAL CARD : MEMBER CREATION - REFERRER" enabled="true">
          <stringProp name="TestPlan.comments">A</stringProp>
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Id FROM RecordType WHERE sObjectType=&apos;Account&apos; AND DeveloperName=&apos;PersonAccount&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;rtRef&quot;&#xd;
        },&#xd;
        {&#xd;
           &quot;method&quot;: &quot;PATCH&quot;,&#xd;
           &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/account/Gigya_ID__c/${GIGYA}&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;BelongsToLaCollection__c&quot; : true,&#xd;
                &quot;LaCollection_MarketId__c&quot; : &quot;${MarketId}&quot;,&#xd;
                &quot;recordTypeId&quot; : &quot;@{rtRef.records[0].Id}&quot;,&#xd;
                &quot;PersonEmail&quot; : &quot;${PersonEmailParrain}&quot;&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;accountRef&quot;&#xd;
        },&#xd;
&#xd;
        {&#xd;
           &quot;method&quot;: &quot;PATCH&quot;,&#xd;
           &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/CustomerSource__c/UniqueKey__c/${SourceSystemId}-${UID}&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;SourceSystemId__c&quot; : &quot;${SourceSystemId}&quot;,&#xd;
                &quot;Id__c&quot; : &quot;${UID}&quot;,&#xd;
                &quot;Client__r&quot;: {&#xd;
                    &quot;Gigya_id__c&quot; : &quot;${GIGYA}&quot;&#xd;
                }&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;customerSourceRef&quot;&#xd;
        },&#xd;
         {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Position__c, Loyalty_Tier__r.SequenceNumber, MemberCycle__r.LoyaltyTierGroup.Name, MemberCycle__r.Cycle__c, MemberCycle__r.CycleActive__c, MemberCycle__r.CycleStartDate__c, MemberCycle__r.CycleEndDate__c, MemberId FROM MemberBenefit WHERE Card_State__c = &apos;2&apos; AND MemberCycle__r.LoyaltyMember.MembershipNumber=&apos;${GIGYA}&apos; AND MemberCycle__r.LoyaltyTierGroup.Name= &apos;${LoyaltyTierGroupName}&apos; AND MemberCycle__r.Cycle__c = 1 AND MemberCycle__r.CycleActive__c = true&quot;,&#xd;
            &quot;referenceId&quot; : &quot;memberTierRt&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="MemberId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">MemberId</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;Id\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="MemberIdBenefit" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">MemberIdBenefit</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;MemberId\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1102 - REFFRAL CARD : POST T&amp;CS" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/LoyaltyProgramMember/MembershipNumber/${GIGYA}?fields=Id&quot;,&#xd;
            &quot;referenceId&quot; : &quot;memberRef&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Id FROM LoyaltyMemberTier WHERE LoyaltyMemberId = &apos;@{memberRef.Id}&apos; AND CycleActive__c=true&quot;,&#xd;
            &quot;referenceId&quot; : &quot;mtRef&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;method&quot;: &quot;PATCH&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/loyaltymembertier/id/@{mtRef.records[0].Id}&quot;,&#xd;
            &quot;referenceId&quot; : &quot;mtUpdateRef&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;OptIn_TermsConditions__c&quot; : true&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;method&quot;: &quot;PATCH&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/LoyaltyProgramMember/MembershipNumber/${GIGYA}&quot;,&#xd;
            &quot;referenceId&quot; : &quot;memberRefUpdate&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;Language__c&quot; : &quot;${Language}&quot;&#xd;
            }&#xd;
       }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Language updated?" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[3].body.success</stringProp>
            <stringProp name="EXPECTED_VALUE">true</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">500</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1103 - REFFRAL CARD : POST REFERRAL FORM 1" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;PATCH&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/Lead/LaCollection_ExternalId__c/${GIGYA}+${PersonEmailParraine1}&quot;,&#xd;
            &quot;body&quot;: {&#xd;
                &quot;Email&quot;: &quot;${PersonEmailParraine1}&quot;,&#xd;
                &quot;Firstname&quot;: &quot;TEST&quot;,&#xd;
                &quot;Lastname&quot;: &quot;AUTO&quot;,&#xd;
                &quot;LeadSource&quot;: &quot;LaCollection&quot;&#xd;
                &#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;leadRef&quot;&#xd;
        }&#xd;
        ,&#xd;
        {&#xd;
            &quot;method&quot;: &quot;POST&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/transactionJournal/&quot;,&#xd;
            &quot;body&quot;: {&#xd;
                &quot;Origin&quot; : &quot;Referral Form&quot;,&#xd;
                &quot;Member&quot;: {&#xd;
                    &quot;MembershipNumber&quot;: &quot;${GIGYA}&quot;&#xd;
                }&#xd;
                ,&#xd;
                &quot;Referred__c&quot;: &quot;@{leadRef.id}&quot;&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;transactinjournalId&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1104 - REFFRAL CARD : GET CODE REFERRAL" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT ReferralCode FROM LoyaltyProgramMember where MembershipNumber=&apos;${GIGYA}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;RequestReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">3000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="ReferralCode" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">ReferralCode</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;ReferralCode\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1105 - REFFRAL CARD : MEMBER CREATION - REFERRED 1" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Id FROM RecordType WHERE sObjectType=&apos;Account&apos; AND DeveloperName=&apos;PersonAccount&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;rtRef&quot;&#xd;
        },&#xd;
        {&#xd;
           &quot;method&quot;: &quot;PATCH&quot;,&#xd;
           &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/account/Gigya_ID__c/${GIGYA}_Parraine&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;BelongsToLaCollection__c&quot; : true,&#xd;
                &quot;LaCollection_MarketId__c&quot; : &quot;${MarketId}&quot;,&#xd;
                &quot;recordTypeId&quot; : &quot;@{rtRef.records[0].Id}&quot;,&#xd;
                &quot;PersonEmail&quot; : &quot;${PersonEmailParraine1}&quot;&#xd;
              &#xd;
                 &#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;accountRef&quot;&#xd;
        }&#xd;
     &#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="MemberId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">MemberId</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;Id\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1106 - REFFRAL CARD : POST MEMBER - REFERRER CODE" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
       &#xd;
        {&#xd;
           &quot;method&quot;: &quot;GET&quot;,&#xd;
           &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/LoyaltyProgramMember/MembershipNumber/${GIGYA}_Parraine?fields=Id&quot;,&#xd;
           &quot;referenceId&quot; : &quot;memberRef&quot;&#xd;
        },&#xd;
        {&#xd;
           &quot;method&quot;: &quot;GET&quot;,&#xd;
           &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Id FROM LoyaltyMemberTier WHERE LoyaltyMemberId = &apos;@{memberRef.Id}&apos; AND CycleActive__c=true&quot;,&#xd;
           &quot;referenceId&quot; : &quot;mtRef&quot;&#xd;
        },&#xd;
        {&#xd;
           &quot;method&quot;: &quot;PATCH&quot;,&#xd;
           &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/loyaltymembertier/id/@{mtRef.records[0].Id}&quot;,&#xd;
           &quot;referenceId&quot; : &quot;mtUpdateRef&quot;,&#xd;
           &quot;body&quot; : { &#xd;
               &quot;OptIn_TermsConditions__c&quot; : true,&#xd;
                &quot;ReferrerCode__c&quot; : &quot;${ReferralCode}&quot;&#xd;
           &#xd;
            }&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="LoyaltyMemberId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">LoyaltyMemberId</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;Id\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1107 - REFFRAL CARD : REFERRED T&amp;CS = TRUE ?" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT OptIn_TermsConditions__c from LoyaltyMemberTier WHERE LoyaltyMemberId = &apos;${LoyaltyMemberId}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;OptinReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">3000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="OptIn_TermsConditions__c" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[0].body.records[0].OptIn_TermsConditions__c</stringProp>
            <stringProp name="EXPECTED_VALUE">true</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1108 - REFFRAL CARD : REFERRED BY ID = ID REFERRER ?" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT ReferredById from LoyaltyProgramMember WHERE MembershipNumber = &apos;${GIGYA}_Parraine&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;OptinReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">2000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="REFERREDID" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[0].body.records[0].ReferredById</stringProp>
            <stringProp name="EXPECTED_VALUE">${MemberIdBenefit}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1109 - REFFRAL CARD : REFERRAL NOTIFICATION  ?" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Type__c from TransactionJournal WHERE Type__c =&apos;Referral Notification&apos; AND MemberId = &apos;${MemberIdBenefit}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;LoyaltyMemberIdReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">3000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Type__c" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[0].body.records[0].Type__c</stringProp>
            <stringProp name="EXPECTED_VALUE">Referral Notification</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1110 - REFFRAL CARD : REFERRAL NOTIFICATION  IS PROCESSED ?" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Type__c from TransactionJournal WHERE Type__c =&apos;Referral Notification&apos; AND MemberId = &apos;${MemberIdBenefit}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;LoyaltyMemberIdReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">3000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Type__c" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[0].body.records[0].Type__c</stringProp>
            <stringProp name="EXPECTED_VALUE">Referral Notification</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1111 - REFFRAL CARD : REFERRAL INTERACTION JOURNAL = PROCESSED ?" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Status from TransactionJournal WHERE Type__c =&apos;Referral&apos; AND MemberId = &apos;${MemberIdBenefit}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;LoyaltyMemberIdReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">5000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Status" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[0].body.records[0].Status</stringProp>
            <stringProp name="EXPECTED_VALUE">	
Processed</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1112 - REFFRAL CARD : REFERRAL ACE  ?" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Name from MemberBenefit WHERE MemberCycle__r.LoyaltyMember.MembershipNumber = &apos;${GIGYA}&apos; AND Name =&apos;REFERRAL&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;CardReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">3000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="AceName" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[0].body.records[0].Name</stringProp>
            <stringProp name="EXPECTED_VALUE">	
REFERRAL</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1113 - REFFRAL CARD : POST REFERRAL FORM 2" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;PATCH&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/Lead/LaCollection_ExternalId__c/${GIGYA}+${PersonEmailParraine2}&quot;,&#xd;
            &quot;body&quot;: {&#xd;
                &quot;Email&quot;: &quot;${PersonEmailParraine2}&quot;,&#xd;
                &quot;Firstname&quot;: &quot;TEST&quot;,&#xd;
                &quot;Lastname&quot;: &quot;AUTO&quot;,&#xd;
                &quot;LeadSource&quot;: &quot;LaCollection&quot;&#xd;
                &#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;leadRef&quot;&#xd;
        }&#xd;
        ,&#xd;
        {&#xd;
            &quot;method&quot;: &quot;POST&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/transactionJournal/&quot;,&#xd;
            &quot;body&quot;: {&#xd;
                &quot;Origin&quot; : &quot;Referral Form&quot;,&#xd;
                &quot;Member&quot;: {&#xd;
                    &quot;MembershipNumber&quot;: &quot;${GIGYA}&quot;&#xd;
                }&#xd;
                ,&#xd;
                &quot;Referred__c&quot;: &quot;@{leadRef.id}&quot;&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;transactinjournalId&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1114 - REFFRAL CARD : MEMBER CREATION - REFERRED 2" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Id FROM RecordType WHERE sObjectType=&apos;Account&apos; AND DeveloperName=&apos;PersonAccount&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;rtRef&quot;&#xd;
        },&#xd;
        {&#xd;
           &quot;method&quot;: &quot;PATCH&quot;,&#xd;
           &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/account/Gigya_ID__c/${GIGYA}_Parraine2&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                 &quot;BelongsToLaCollection__c&quot; : true,&#xd;
                &quot;LaCollection_MarketId__c&quot; : &quot;${MarketId}&quot;,&#xd;
                &quot;recordTypeId&quot; : &quot;@{rtRef.records[0].Id}&quot;,&#xd;
                &quot;PersonEmail&quot; : &quot;${PersonEmailParraine2}&quot;&#xd;
                 &#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;accountRef&quot;&#xd;
        }&#xd;
     &#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="MemberId2" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">MemberId2</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;Id\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">3000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1115 - REFFRAL CARD : POST MEMBER - REFERRER CODE" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
       &#xd;
        {&#xd;
           &quot;method&quot;: &quot;GET&quot;,&#xd;
           &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/LoyaltyProgramMember/MembershipNumber/${GIGYA}_Parraine2?fields=Id&quot;,&#xd;
           &quot;referenceId&quot; : &quot;memberRef&quot;&#xd;
        },&#xd;
        {&#xd;
           &quot;method&quot;: &quot;GET&quot;,&#xd;
           &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Id FROM LoyaltyMemberTier WHERE LoyaltyMemberId = &apos;@{memberRef.Id}&apos; AND CycleActive__c=true&quot;,&#xd;
           &quot;referenceId&quot; : &quot;mtRef&quot;&#xd;
        },&#xd;
        {&#xd;
           &quot;method&quot;: &quot;PATCH&quot;,&#xd;
           &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/loyaltymembertier/id/@{mtRef.records[0].Id}&quot;,&#xd;
           &quot;referenceId&quot; : &quot;mtUpdateRef&quot;,&#xd;
           &quot;body&quot; : { &#xd;
               &quot;OptIn_TermsConditions__c&quot; : true,&#xd;
               &quot;ReferrerCode__c&quot; : &quot;${ReferralCode}&quot;&#xd;
            }&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="LoyaltyMemberId2" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">LoyaltyMemberId2</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;Id\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1116 - REFFRAL CARD : REFERRED BY ID = ID REFERRER ?" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT ReferredById from LoyaltyProgramMember WHERE Id = &apos;${LoyaltyMemberId2}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;OptinReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">2000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="REFERREDID" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[0].body.records[0].ReferredById</stringProp>
            <stringProp name="EXPECTED_VALUE">${MemberIdBenefit}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1117 - REFFRAL CARD : 2 REFERRAL NOTIFICATION  ?" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Type__c from TransactionJournal WHERE Type__c =&apos;Referral Notification&apos; AND MemberId = &apos;${MemberIdBenefit}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;LoyaltyMemberIdReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">3000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Type__c" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[0].body.records[0].Type__c</stringProp>
            <stringProp name="EXPECTED_VALUE">Referral Notification</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Size" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[0].body.totalSize</stringProp>
            <stringProp name="EXPECTED_VALUE">2</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1118 - REFFRAL CARD : REFERRAL NOTIFICATION 2 IS PROCESSED ?" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Type__c from TransactionJournal WHERE Type__c =&apos;Referral Notification&apos; AND MemberId = &apos;${MemberIdBenefit}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;LoyaltyMemberIdReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">3000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Type__c" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[0].body.records[0].Type__c</stringProp>
            <stringProp name="EXPECTED_VALUE">Referral Notification</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1119 - REFFRAL CARD : 2 REFERRAL INTERACTION JOURNAL = PROCESSED ?" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Status from TransactionJournal WHERE Type__c =&apos;Referral&apos; AND MemberId = &apos;${MemberIdBenefit}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;LoyaltyMemberIdReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">10000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Status" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[0].body.records[0].Status</stringProp>
            <stringProp name="EXPECTED_VALUE">	
Processed</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Size" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[0].body.totalSize</stringProp>
            <stringProp name="EXPECTED_VALUE">2</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1120 - REFFRAL CARD : UNIQUE REFERRAL ACE  ?" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Name from MemberBenefit WHERE MemberCycle__r.LoyaltyMember.MembershipNumber = &apos;${GIGYA}&apos; AND Name =&apos;REFERRAL&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;CardReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">3000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="AceName" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[0].body.records[0].Name</stringProp>
            <stringProp name="EXPECTED_VALUE">	
REFERRAL</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Size" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[0].body.totalSize</stringProp>
            <stringProp name="EXPECTED_VALUE">1</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="12 - REFFRAL CARD : 1 REFERRER  - 2 REFERRED   (1 NOT MEMBER - 1 EXISTING MEMBER)" enabled="true">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1200 - REFFRAL CARD : MEMBER CREATION - REFERRER" enabled="true">
          <stringProp name="TestPlan.comments">A</stringProp>
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Id FROM RecordType WHERE sObjectType=&apos;Account&apos; AND DeveloperName=&apos;PersonAccount&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;rtRef&quot;&#xd;
        },&#xd;
        {&#xd;
           &quot;method&quot;: &quot;PATCH&quot;,&#xd;
           &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/account/Gigya_ID__c/${GIGYA}&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;BelongsToLaCollection__c&quot; : true,&#xd;
                &quot;LaCollection_MarketId__c&quot; : &quot;${MarketId}&quot;,&#xd;
                &quot;recordTypeId&quot; : &quot;@{rtRef.records[0].Id}&quot;,&#xd;
                &quot;PersonEmail&quot; : &quot;${PersonEmailParrain}&quot;&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;accountRef&quot;&#xd;
        },&#xd;
&#xd;
        {&#xd;
           &quot;method&quot;: &quot;PATCH&quot;,&#xd;
           &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/CustomerSource__c/UniqueKey__c/${SourceSystemId}-${UID}&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;SourceSystemId__c&quot; : &quot;${SourceSystemId}&quot;,&#xd;
                &quot;Id__c&quot; : &quot;${UID}&quot;,&#xd;
                &quot;Client__r&quot;: {&#xd;
                    &quot;Gigya_id__c&quot; : &quot;${GIGYA}&quot;&#xd;
                }&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;customerSourceRef&quot;&#xd;
        },&#xd;
         {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Position__c, Loyalty_Tier__r.SequenceNumber, MemberCycle__r.LoyaltyTierGroup.Name, MemberCycle__r.Cycle__c, MemberCycle__r.CycleActive__c, MemberCycle__r.CycleStartDate__c, MemberCycle__r.CycleEndDate__c, MemberId FROM MemberBenefit WHERE Card_State__c = &apos;2&apos; AND MemberCycle__r.LoyaltyMember.MembershipNumber=&apos;${GIGYA}&apos; AND MemberCycle__r.LoyaltyTierGroup.Name= &apos;${LoyaltyTierGroupName}&apos; AND MemberCycle__r.Cycle__c = 1 AND MemberCycle__r.CycleActive__c = true&quot;,&#xd;
            &quot;referenceId&quot; : &quot;memberTierRt&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="MemberId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">MemberId</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;Id\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="MemberIdBenefit" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">MemberIdBenefit</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;MemberId\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1201 - REFFRAL CARD : POST T&amp;CS" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/LoyaltyProgramMember/MembershipNumber/${GIGYA}?fields=Id&quot;,&#xd;
            &quot;referenceId&quot; : &quot;memberRef&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Id FROM LoyaltyMemberTier WHERE LoyaltyMemberId = &apos;@{memberRef.Id}&apos; AND CycleActive__c=true&quot;,&#xd;
            &quot;referenceId&quot; : &quot;mtRef&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;method&quot;: &quot;PATCH&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/loyaltymembertier/id/@{mtRef.records[0].Id}&quot;,&#xd;
            &quot;referenceId&quot; : &quot;mtUpdateRef&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;OptIn_TermsConditions__c&quot; : true&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;method&quot;: &quot;PATCH&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/LoyaltyProgramMember/MembershipNumber/${GIGYA}&quot;,&#xd;
            &quot;referenceId&quot; : &quot;memberRefUpdate&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;Language__c&quot; : &quot;${Language}&quot;&#xd;
            }&#xd;
       }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">500</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1202 - REFFRAL CARD : POST REFERRAL FORM 1" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;PATCH&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/Lead/LaCollection_ExternalId__c/${GIGYA}+${PersonEmailParraine1}&quot;,&#xd;
            &quot;body&quot;: {&#xd;
                &quot;Email&quot;: &quot;${PersonEmailParraine1}&quot;,&#xd;
                &quot;Firstname&quot;: &quot;TEST&quot;,&#xd;
                &quot;Lastname&quot;: &quot;AUTO&quot;,&#xd;
                &quot;LeadSource&quot;: &quot;LaCollection&quot;&#xd;
                &#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;leadRef&quot;&#xd;
        }&#xd;
        ,&#xd;
        {&#xd;
            &quot;method&quot;: &quot;POST&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/transactionJournal/&quot;,&#xd;
            &quot;body&quot;: {&#xd;
                &quot;Origin&quot; : &quot;Referral Form&quot;,&#xd;
                &quot;Member&quot;: {&#xd;
                    &quot;MembershipNumber&quot;: &quot;${GIGYA}&quot;&#xd;
                }&#xd;
                ,&#xd;
                &quot;Referred__c&quot;: &quot;@{leadRef.id}&quot;&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;transactinjournalId&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1203 - REFFRAL CARD : GET CODE REFERRAL" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT ReferralCode FROM LoyaltyProgramMember where MembershipNumber=&apos;${GIGYA}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;RequestReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">3000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="ReferralCode" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">ReferralCode</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;ReferralCode\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1204 - REFFRAL CARD : MEMBER CREATION - REFERRED 1" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Id FROM RecordType WHERE sObjectType=&apos;Account&apos; AND DeveloperName=&apos;PersonAccount&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;rtRef&quot;&#xd;
        },&#xd;
        {&#xd;
           &quot;method&quot;: &quot;PATCH&quot;,&#xd;
           &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/account/Gigya_ID__c/${GIGYA}_Parraine&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;BelongsToLaCollection__c&quot; : true,&#xd;
                &quot;LaCollection_MarketId__c&quot; : &quot;${MarketId}&quot;,&#xd;
                &quot;recordTypeId&quot; : &quot;@{rtRef.records[0].Id}&quot;,&#xd;
                &quot;PersonEmail&quot; : &quot;${PersonEmailParraine1}&quot;&#xd;
                 &#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;accountRef&quot;&#xd;
        }&#xd;
     &#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="MemberId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">MemberId</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;Id\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1205 - REFFRAL CARD : POST MEMBER - REFERRER CODE" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
       &#xd;
        {&#xd;
           &quot;method&quot;: &quot;GET&quot;,&#xd;
           &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/LoyaltyProgramMember/MembershipNumber/${GIGYA}_Parraine?fields=Id&quot;,&#xd;
           &quot;referenceId&quot; : &quot;memberRef&quot;&#xd;
        },&#xd;
        {&#xd;
           &quot;method&quot;: &quot;GET&quot;,&#xd;
           &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Id FROM LoyaltyMemberTier WHERE LoyaltyMemberId = &apos;@{memberRef.Id}&apos; AND CycleActive__c=true&quot;,&#xd;
           &quot;referenceId&quot; : &quot;mtRef&quot;&#xd;
        },&#xd;
        {&#xd;
           &quot;method&quot;: &quot;PATCH&quot;,&#xd;
           &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/loyaltymembertier/id/@{mtRef.records[0].Id}&quot;,&#xd;
           &quot;referenceId&quot; : &quot;mtUpdateRef&quot;,&#xd;
           &quot;body&quot; : { &#xd;
               &quot;OptIn_TermsConditions__c&quot; : true,&#xd;
               &quot;ReferrerCode__c&quot; : &quot;${ReferralCode}&quot;&#xd;
            }&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="LoyaltyMemberId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">LoyaltyMemberId</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;Id\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1206 - REFFRAL CARD : REFERRED T&amp;CS = TRUE ?" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT OptIn_TermsConditions__c from LoyaltyMemberTier WHERE LoyaltyMemberId = &apos;${LoyaltyMemberId}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;OptinReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">3000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="OptIn_TermsConditions__c" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[0].body.records[0].OptIn_TermsConditions__c</stringProp>
            <stringProp name="EXPECTED_VALUE">true</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1207 - REFFRAL CARD : REFERRED BY ID = ID REFERRER ?" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT ReferredById from LoyaltyProgramMember WHERE MembershipNumber = &apos;${GIGYA}_Parraine&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;OptinReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">2000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="REFERREDID" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[0].body.records[0].ReferredById</stringProp>
            <stringProp name="EXPECTED_VALUE">${MemberIdBenefit}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1208 - REFFRAL CARD : REFERRAL NOTIFICATION  ?" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Type__c from TransactionJournal WHERE Type__c =&apos;Referral Notification&apos; AND MemberId = &apos;${MemberIdBenefit}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;LoyaltyMemberIdReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">3000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Type__c" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[0].body.records[0].Type__c</stringProp>
            <stringProp name="EXPECTED_VALUE">Referral Notification</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1209 - REFFRAL CARD : REFERRAL NOTIFICATION  IS PROCESSED ?" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT status from TransactionJournal WHERE Type__c =&apos;Referral Notification&apos; AND MemberId = &apos;${MemberIdBenefit}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;LoyaltyMemberIdReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">3000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Status" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[0].body.records[0].Status</stringProp>
            <stringProp name="EXPECTED_VALUE">Processed</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1210 - REFFRAL CARD : REFERRAL INTERACTION JOURNAL = PROCESSED ?" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Status from TransactionJournal WHERE MemberId = &apos;${MemberIdBenefit}&apos; AND JournalSubType.Name =&apos;Referral&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;LoyaltyMemberIdReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">5000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Status" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[0].body.records[0].Status</stringProp>
            <stringProp name="EXPECTED_VALUE">	
Processed</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1211 - REFFRAL CARD : REFERRAL ACE  ?" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Name from MemberBenefit WHERE MemberCycle__r.LoyaltyMember.MembershipNumber = &apos;${GIGYA}&apos; AND Name =&apos;REFERRAL&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;CardReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">3000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="AceName" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[0].body.records[0].Name</stringProp>
            <stringProp name="EXPECTED_VALUE">	
REFERRAL</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1212 - REFFRAL CARD : GET NEW MEMBER " enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Id, PersonEmail, Gigya_ID__c from Account Where BelongsToLaCollection__c =true order by CreatedDate desc limit 1&quot;,&#xd;
            &quot;referenceId&quot; : &quot;CardReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Email" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">EmailMember</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;PersonEmail\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="GigyaMember" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">GigyaMember</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;Gigya_ID__c\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">3000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1213 - REFFRAL CARD : POST REFERRAL FORM 2" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;PATCH&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/Lead/LaCollection_ExternalId__c/${GigyaMember}+${EmailMember}&quot;,&#xd;
            &quot;body&quot;: {&#xd;
                &quot;Email&quot;: &quot;${EmailMember}&quot;,&#xd;
                &quot;Firstname&quot;: &quot;TEST&quot;,&#xd;
                &quot;Lastname&quot;: &quot;AUTO&quot;,&#xd;
                &quot;LeadSource&quot;: &quot;LaCollection&quot;&#xd;
                &#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;leadRef&quot;&#xd;
        }&#xd;
        ,&#xd;
        {&#xd;
            &quot;method&quot;: &quot;POST&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/transactionJournal/&quot;,&#xd;
            &quot;body&quot;: {&#xd;
                &quot;Origin&quot; : &quot;Referral Form&quot;,&#xd;
                &quot;Member&quot;: {&#xd;
                    &quot;MembershipNumber&quot;: &quot;${GIGYA}&quot;&#xd;
                }&#xd;
                ,&#xd;
                &quot;Referred__c&quot;: &quot;@{leadRef.id}&quot;&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;transactinjournalId&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1214 - REFFRAL CARD : POST MEMBER - REFERRER CODE" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
       &#xd;
        {&#xd;
           &quot;method&quot;: &quot;GET&quot;,&#xd;
           &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/LoyaltyProgramMember/MembershipNumber/${GigyaMember}?fields=Id&quot;,&#xd;
           &quot;referenceId&quot; : &quot;memberRef&quot;&#xd;
        },&#xd;
        {&#xd;
           &quot;method&quot;: &quot;GET&quot;,&#xd;
           &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Id FROM LoyaltyMemberTier WHERE LoyaltyMemberId = &apos;@{memberRef.Id}&apos; AND CycleActive__c=true&quot;,&#xd;
           &quot;referenceId&quot; : &quot;mtRef&quot;&#xd;
        },&#xd;
        {&#xd;
           &quot;method&quot;: &quot;PATCH&quot;,&#xd;
           &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/loyaltymembertier/id/@{mtRef.records[0].Id}&quot;,&#xd;
           &quot;referenceId&quot; : &quot;mtUpdateRef&quot;,&#xd;
           &quot;body&quot; : { &#xd;
               &quot;OptIn_TermsConditions__c&quot; : true,&#xd;
               &quot;ReferrerCode__c&quot; : &quot;${ReferralCode}&quot;&#xd;
            }&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="LoyaltyMemberId2" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">LoyaltyMemberId2</stringProp>
            <stringProp name="RegexExtractor.regex">\&quot;Id\&quot;:\&quot;([^\&quot;]+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1215 - REFFRAL CARD : REFERRED BY ID = ID REFERRER ?" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT ReferredById from LoyaltyProgramMember WHERE MembershipNumber = &apos;${GigyaMember}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;OptinReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">2000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="REFERREDID" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[0].body.records[0].ReferredById</stringProp>
            <stringProp name="EXPECTED_VALUE">${MemberIdBenefit}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1216 - REFFRAL CARD : 2 REFERRAL NOTIFICATION  ?" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Type__c from TransactionJournal WHERE Type__c =&apos;Referral Notification&apos; AND MemberId = &apos;${MemberIdBenefit}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;LoyaltyMemberIdReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">3000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Type__c" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[0].body.records[0].Type__c</stringProp>
            <stringProp name="EXPECTED_VALUE">Referral Notification</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Size" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[0].body.totalSize</stringProp>
            <stringProp name="EXPECTED_VALUE">2</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1217 - REFFRAL CARD : REFERRAL NOTIFICATION 2 IS PROCESSED ?" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Type__c from TransactionJournal WHERE Type__c =&apos;Referral Notification&apos; AND MemberId = &apos;${MemberIdBenefit}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;LoyaltyMemberIdReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">3000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Type__c" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[0].body.records[0].Type__c</stringProp>
            <stringProp name="EXPECTED_VALUE">Referral Notification</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1218 - REFFRAL CARD : 2 REFERRAL INTERACTION JOURNAL = PROCESSED ?" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Status from TransactionJournal WHERE MemberId = &apos;${MemberIdBenefit}&apos; AND JournalSubType.Name =&apos;Referral&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;LoyaltyMemberIdReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">3000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Status" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[0].body.records[0].Status</stringProp>
            <stringProp name="EXPECTED_VALUE">	
Processed</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Size" enabled="false">
            <stringProp name="JSON_PATH">$.compositeResponse[0].body.totalSize</stringProp>
            <stringProp name="EXPECTED_VALUE">2</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1219 - REFFRAL CARD : UNIQUE REFERRAL ACE  ?" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Name from MemberBenefit WHERE MemberCycle__r.LoyaltyMember.MembershipNumber = &apos;${GIGYA}&apos; AND Name =&apos;REFERRAL&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;CardReference&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">3000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="AceName" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[0].body.records[0].Name</stringProp>
            <stringProp name="EXPECTED_VALUE">	
REFERRAL</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Size" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[0].body.totalSize</stringProp>
            <stringProp name="EXPECTED_VALUE">1</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
          <collectionProp name="UserParameters.names">
            <stringProp name="67815789">GIGYA</stringProp>
            <stringProp name="2682">TN</stringProp>
            <stringProp name="-1548945544">Language</stringProp>
            <stringProp name="1538415758">PersonEmailParrain</stringProp>
            <stringProp name="948796794">PersonEmailParraine1</stringProp>
            <stringProp name="948796795">PersonEmailParraine2</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="178726469">
              <stringProp name="938932639">${SourceSystemId}|${UID}</stringProp>
              <stringProp name="962381112">JMETER-${__time(yyyy-MM-dd-HH:mm:ss)}-Refill</stringProp>
              <stringProp name="2252">FR</stringProp>
              <stringProp name="2106690120">malik.rachi+${__Random(1000,999999,)}@gmail.com</stringProp>
              <stringProp name="-886888636">malik.rachi+${__Random(1000,999999,)}@hotmai.com</stringProp>
              <stringProp name="-886888636">malik.rachi+${__Random(1000,999999,)}@hotmai.com</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="UserParameters.per_iteration">true</boolProp>
        </UserParameters>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="13 - 2ND PURCHASE PRIORITY " enabled="true">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">startnextloop</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
          <collectionProp name="UserParameters.names">
            <stringProp name="67815789">GIGYA</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="102378257">
              <stringProp name="938932639">${SourceSystemId}|${UID}</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="UserParameters.per_iteration">true</boolProp>
        </UserParameters>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1300 - 2D  PURCHASE CARD PRIORITY : MEMBER GRIDS" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Id FROM RecordType WHERE sObjectType=&apos;Account&apos; AND DeveloperName=&apos;PersonAccount&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;rtRef&quot;&#xd;
        },&#xd;
        {&#xd;
           &quot;method&quot;: &quot;PATCH&quot;,&#xd;
           &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/account/Gigya_ID__c/${GIGYA}&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;BelongsToLaCollection__c&quot; : true,&#xd;
                &quot;LaCollection_MarketId__c&quot; : &quot;${MarketId}&quot;,&#xd;
                &quot;recordTypeId&quot; : &quot;@{rtRef.records[0].Id}&quot;,&#xd;
                &quot;PersonEmail&quot; : &quot;${PersonEmail}&quot;&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;accountRef&quot;&#xd;
        },&#xd;
&#xd;
        {&#xd;
           &quot;method&quot;: &quot;PATCH&quot;,&#xd;
           &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/CustomerSource__c/UniqueKey__c/${SourceSystemId}-${UID}&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;SourceSystemId__c&quot; : &quot;${SourceSystemId}&quot;,&#xd;
                &quot;Id__c&quot; : &quot;${UID}&quot;,&#xd;
                &quot;Client__r&quot;: {&#xd;
                    &quot;Gigya_id__c&quot; : &quot;${GIGYA}&quot;&#xd;
                }&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;customerSourceRef&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Member created?" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[1].body.success</stringProp>
            <stringProp name="EXPECTED_VALUE">true</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1301 - 2D  PURCHASE CARD PRIORITY : POST T&amp;CS" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/LoyaltyProgramMember/MembershipNumber/${GIGYA}?fields=Id&quot;,&#xd;
            &quot;referenceId&quot; : &quot;memberRef&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Id FROM LoyaltyMemberTier WHERE LoyaltyMemberId = &apos;@{memberRef.Id}&apos; AND CycleActive__c=true&quot;,&#xd;
            &quot;referenceId&quot; : &quot;mtRef&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;method&quot;: &quot;PATCH&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/loyaltymembertier/id/@{mtRef.records[0].Id}&quot;,&#xd;
            &quot;referenceId&quot; : &quot;mtUpdateRef&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;OptIn_TermsConditions__c&quot; : true&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;method&quot;: &quot;PATCH&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/LoyaltyProgramMember/MembershipNumber/${GIGYA}&quot;,&#xd;
            &quot;referenceId&quot; : &quot;memberRefUpdate&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;Language__c&quot; : &quot;FR&quot;&#xd;
            }&#xd;
       }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">500</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1303 - 2D  PURCHASE CARD PRIORITY : EXCLUSIVITY TRANSACTION " enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
		&#xd;
        {&#xd;
           &quot;method&quot;: &quot;PATCH&quot;,&#xd;
           &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/transaction__c/TransactionNumber__c/T-${GIGYA}&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;CustomerSourceSystemId__c&quot; : &quot;${SourceSystemId}&quot;,&#xd;
                &quot;CustomerSourceId__c&quot; : &quot;${UID}&quot;,&#xd;
               &quot;CodeBoutiqueTechnical__c&quot; : &quot;A1&quot;,&#xd;
                &quot;CreationTimeStamp__c&quot; : &quot;${__time(YYYY-MM-dd,)}T00:00:00.000+0000&quot;&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;transactionRef&quot;&#xd;
        },&#xd;
	   {&#xd;
            &quot;method&quot;: &quot;PATCH&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/ccc_product__c/ExternalId__c/Jmeter-${GIGYA}&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;Name__c&quot;: &quot;Jmeter-${GIGYA}&quot;,&#xd;
                &quot;SKU__c&quot;: &quot;${SKU_EXCLUSIVITY}&quot;,&#xd;
                &quot;Type__c&quot; : &quot;SellProduct&quot;,&#xd;
                &quot;Line__c&quot;: &quot;P1&quot;&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;productRef&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;method&quot;: &quot;PATCH&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/TransactionLine__c/TransactionLineNumber__c/Line-${GIGYA}&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;Transaction__r&quot; : {&#xd;
                    &quot;TransactionNumber__c&quot; : &quot;T-${GIGYA}&quot;&#xd;
                },&#xd;
                &quot;Product__c&quot; : &quot;@{productRef.id}&quot;,&#xd;
                &quot;Quantity__c&quot; : 1,&#xd;
                &quot;Currency_Code__c&quot; : &quot;EUR&quot;,&#xd;
                &quot;DivisionCode__c&quot; : &quot;FNB&quot;,&#xd;
                &quot;NetRevenueTaxEUR__c&quot; : 50,&#xd;
                &quot;AdvisorCode__c&quot;: &quot;A1126&quot;&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;transactionLineRef&quot;&#xd;
        }&#xd;
       &#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="TransactionLineId" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">IdTransactionLine</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.compositeResponse[2].body.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1304 - 2D  PURCHASE CARD PRIORITY : BATCH TRANSACTION LINE " enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/actions/custom/flow/Loyalty_Run_TransactionLine_Batch</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;inputs&quot; : [{&#xd;
        &quot;Input1&quot;:&quot;&quot;&#xd;
        }&#xd;
    ] &#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1305 - 2D  PURCHASE CARD PRIORITY : BATCH CARD GENERATOR " enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/actions/custom/batchJobAction/Pending_TransactionJournal</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;inputs&quot; : [{&#xd;
        &quot;flow_IsPreviousCycle&quot;: false&#xd;
    }] &#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">60000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="1306 - 2D  PURCHASE CARD PRIORITY : SET DATE TRANSACTION 2" enabled="true">
          <stringProp name="TestPlan.comments">https://groups.google.com/g/ptgram24/c/mlzN50tLQBI?pli=1</stringProp>
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="script">import java.time.LocalDate

def date = LocalDate.now()

def day = date.getDayOfMonth()
def month = date.getMonthValue()
def year = date.getYear()

// J+1

def newDate = &quot;${year}-${month}-${day+1}&quot;
SampleResult.setResponseData(&quot;newDate: &quot; + newDate, &quot;UTF-8&quot;)

vars.put(&quot;purchaseDate&quot;, newDate)</stringProp>
          <stringProp name="scriptLanguage">groovy</stringProp>
        </JSR223Sampler>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1307 - 2D  PURCHASE CARD PRIORITY : REFILL TRANSACTION " enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
		&#xd;
        {&#xd;
           &quot;method&quot;: &quot;PATCH&quot;,&#xd;
           &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/transaction__c/TransactionNumber__c/T2-${GIGYA}&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;CustomerSourceSystemId__c&quot; : &quot;${SourceSystemId}&quot;,&#xd;
                &quot;CustomerSourceId__c&quot; : &quot;${UID}&quot;,&#xd;
               &quot;CodeBoutiqueTechnical__c&quot; : &quot;A1&quot;,&#xd;
                &quot;CreationTimeStamp__c&quot; : &quot;${purchaseDate}T00:00:00.000+0000&quot;&#xd;
&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;transactionRef&quot;&#xd;
        },&#xd;
	   {&#xd;
            &quot;method&quot;: &quot;PATCH&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/ccc_product__c/ExternalId__c/Jmeter2-${GIGYA}&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;Name__c&quot;: &quot;Jmeter2-${GIGYA}&quot;,&#xd;
                &quot;SKU__c&quot;: &quot;${SKU_REFILL}&quot;,&#xd;
                &quot;Type__c&quot; : &quot;SellProduct&quot;,&#xd;
                &quot;Line__c&quot;: &quot;P1&quot;&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;productRef&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;method&quot;: &quot;PATCH&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/TransactionLine__c/TransactionLineNumber__c/Line2-${GIGYA}&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;Transaction__r&quot; : {&#xd;
                    &quot;TransactionNumber__c&quot; : &quot;T2-${GIGYA}&quot;&#xd;
                },&#xd;
                &quot;Product__c&quot; : &quot;@{productRef.id}&quot;,&#xd;
                &quot;Quantity__c&quot; : 1,&#xd;
                &quot;Currency_Code__c&quot; : &quot;EUR&quot;,&#xd;
                &quot;DivisionCode__c&quot; : &quot;FNB&quot;,&#xd;
                &quot;NetRevenueTaxEUR__c&quot; : 50,&#xd;
                &quot;AdvisorCode__c&quot;: &quot;A1126&quot;&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;transactionLineRef&quot;&#xd;
        }&#xd;
       &#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="TransactionLineId" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">IdTransactionLine2</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.compositeResponse[2].body.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Transaction ok?" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[0].body.success</stringProp>
            <stringProp name="EXPECTED_VALUE">true</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1308 - 2D  PURCHASE CARD PRIORITY : BATCH TRANSACTION LINE " enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/actions/custom/flow/Loyalty_Run_TransactionLine_Batch</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;inputs&quot; : [{&#xd;
        &quot;Input1&quot;:&quot;&quot;&#xd;
        }&#xd;
    ] &#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">60000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1309 - 2D  PURCHASE CARD PRIORITY : BATCH CARD GENERATOR  " enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/actions/custom/batchJobAction/Pending_TransactionJournal</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;inputs&quot; : [{&#xd;
        &quot;flow_IsPreviousCycle&quot;: false&#xd;
    }] &#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${TimerBatch}</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1310 - 2D  PURCHASE CARD PRIORITY : ACE VERIFICATION ?" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Id, Name, Card_State__c, Contact.account.Gigya_ID__c, Position__c FROM MemberBenefit WHERE Name = &apos;2D_PURCHASE_X_DAYS&apos; AND Transaction_Journal__c != null AND Contact.Account.Gigya_ID__c =&apos;${GIGYA}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;ref22&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">${TimerCallAfterBatch}</stringProp>
          </ConstantTimer>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="2ND PURCHASE IN POSTION 6 ?" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[0].body.records[0].Position__c</stringProp>
            <stringProp name="EXPECTED_VALUE">6.0</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="2ND PURCHASE ?" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[0].body.records[0].Name</stringProp>
            <stringProp name="EXPECTED_VALUE">2D_PURCHASE_X_DAYS</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="15 - REFILL PRIORITY ">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">startnextloop</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
          <collectionProp name="UserParameters.names">
            <stringProp name="67815789">GIGYA</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="102378257">
              <stringProp name="938932639">${SourceSystemId}|${UID}</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="UserParameters.per_iteration">true</boolProp>
        </UserParameters>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1500 - REFILL PRIORITY : MEMBER GRIDS" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Id FROM RecordType WHERE sObjectType=&apos;Account&apos; AND DeveloperName=&apos;PersonAccount&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;rtRef&quot;&#xd;
        },&#xd;
        {&#xd;
           &quot;method&quot;: &quot;PATCH&quot;,&#xd;
           &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/account/Gigya_ID__c/${GIGYA}&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;BelongsToLaCollection__c&quot; : true,&#xd;
                &quot;LaCollection_MarketId__c&quot; : &quot;${MarketId}&quot;,&#xd;
                &quot;recordTypeId&quot; : &quot;@{rtRef.records[0].Id}&quot;,&#xd;
                &quot;PersonEmail&quot; : &quot;${PersonEmail}&quot;&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;accountRef&quot;&#xd;
        },&#xd;
&#xd;
        {&#xd;
           &quot;method&quot;: &quot;PATCH&quot;,&#xd;
           &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/CustomerSource__c/UniqueKey__c/${SourceSystemId}-${UID}&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;SourceSystemId__c&quot; : &quot;${SourceSystemId}&quot;,&#xd;
                &quot;Id__c&quot; : &quot;${UID}&quot;,&#xd;
                &quot;Client__r&quot;: {&#xd;
                    &quot;Gigya_id__c&quot; : &quot;${GIGYA}&quot;&#xd;
                }&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;customerSourceRef&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Member created?" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[1].body.success</stringProp>
            <stringProp name="EXPECTED_VALUE">true</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1501 - REFILL PRIORITY : POST T&amp;CS" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/LoyaltyProgramMember/MembershipNumber/${GIGYA}?fields=Id&quot;,&#xd;
            &quot;referenceId&quot; : &quot;memberRef&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Id FROM LoyaltyMemberTier WHERE LoyaltyMemberId = &apos;@{memberRef.Id}&apos; AND CycleActive__c=true&quot;,&#xd;
            &quot;referenceId&quot; : &quot;mtRef&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;method&quot;: &quot;PATCH&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/loyaltymembertier/id/@{mtRef.records[0].Id}&quot;,&#xd;
            &quot;referenceId&quot; : &quot;mtUpdateRef&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;OptIn_TermsConditions__c&quot; : true&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;method&quot;: &quot;PATCH&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/LoyaltyProgramMember/MembershipNumber/${GIGYA}&quot;,&#xd;
            &quot;referenceId&quot; : &quot;memberRefUpdate&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;Language__c&quot; : &quot;FR&quot;&#xd;
            }&#xd;
       }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Language updated?" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[3].body.success</stringProp>
            <stringProp name="EXPECTED_VALUE">true</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="T&amp;C Updated?" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[2].body.success</stringProp>
            <stringProp name="EXPECTED_VALUE">true</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">500</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1502 - REFILL PRIORITY : EXCLUSIVITY TRANSACTION" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
		&#xd;
        {&#xd;
           &quot;method&quot;: &quot;PATCH&quot;,&#xd;
           &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/transaction__c/TransactionNumber__c/T-${GIGYA}&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;CustomerSourceSystemId__c&quot; : &quot;${SourceSystemId}&quot;,&#xd;
                &quot;CustomerSourceId__c&quot; : &quot;${UID}&quot;,&#xd;
               &quot;CodeBoutiqueTechnical__c&quot; : &quot;A1&quot;,&#xd;
                &quot;CreationTimeStamp__c&quot; : &quot;${__time(YYYY-MM-dd,)}T00:00:00.000+0000&quot;&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;transactionRef&quot;&#xd;
        },&#xd;
	   {&#xd;
            &quot;method&quot;: &quot;PATCH&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/ccc_product__c/ExternalId__c/Jmeter-${GIGYA}&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;Name__c&quot;: &quot;Jmeter-${GIGYA}&quot;,&#xd;
                &quot;SKU__c&quot;: &quot;${SKU_EXCLUSIVITY}&quot;,&#xd;
                &quot;Type__c&quot; : &quot;SellProduct&quot;,&#xd;
                &quot;Line__c&quot;: &quot;P1&quot;&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;productRef&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;method&quot;: &quot;PATCH&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/TransactionLine__c/TransactionLineNumber__c/Line-${GIGYA}&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;Transaction__r&quot; : {&#xd;
                    &quot;TransactionNumber__c&quot; : &quot;T-${GIGYA}&quot;&#xd;
                },&#xd;
                &quot;Product__c&quot; : &quot;@{productRef.id}&quot;,&#xd;
                &quot;Quantity__c&quot; : 1,&#xd;
                &quot;Currency_Code__c&quot; : &quot;EUR&quot;,&#xd;
                &quot;DivisionCode__c&quot; : &quot;FNB&quot;,&#xd;
                &quot;NetRevenueTaxEUR__c&quot; : 50,&#xd;
                &quot;AdvisorCode__c&quot;: &quot;A1126&quot;&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;transactionLineRef&quot;&#xd;
        }&#xd;
       &#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Extract TransactionLineId" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">IdTransactionLine</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.compositeResponse[1].body.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Transaction ok?" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[0].body.success</stringProp>
            <stringProp name="EXPECTED_VALUE">true</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1503 - REFILL PRIORITY : REFILL TRANSACTION" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
		&#xd;
        {&#xd;
           &quot;method&quot;: &quot;PATCH&quot;,&#xd;
           &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/transaction__c/TransactionNumber__c/T4-${GIGYA}&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;CustomerSourceSystemId__c&quot; : &quot;${SourceSystemId}&quot;,&#xd;
                &quot;CustomerSourceId__c&quot; : &quot;${UID}&quot;,&#xd;
               &quot;CodeBoutiqueTechnical__c&quot; : &quot;A1&quot;,&#xd;
                &quot;CreationTimeStamp__c&quot; : &quot;${__time(YYYY-MM-dd,)}T00:00:00.000+0000&quot;&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;transactionRef&quot;&#xd;
        },&#xd;
	   {&#xd;
            &quot;method&quot;: &quot;PATCH&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/ccc_product__c/ExternalId__c/Jmeter4-${GIGYA}&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;Name__c&quot;: &quot;Jmeter4-${GIGYA}&quot;,&#xd;
                &quot;SKU__c&quot;: &quot;${SKU_REFILL}&quot;,&#xd;
                &quot;Type__c&quot; : &quot;SellProduct&quot;,&#xd;
                &quot;Line__c&quot;: &quot;P1&quot;&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;productRef&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;method&quot;: &quot;PATCH&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/TransactionLine__c/TransactionLineNumber__c/Line4-${GIGYA}&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;Transaction__r&quot; : {&#xd;
                    &quot;TransactionNumber__c&quot; : &quot;T4-${GIGYA}&quot;&#xd;
                },&#xd;
                &quot;Product__c&quot; : &quot;@{productRef.id}&quot;,&#xd;
                &quot;Quantity__c&quot; : 1,&#xd;
                &quot;Currency_Code__c&quot; : &quot;EUR&quot;,&#xd;
                &quot;DivisionCode__c&quot; : &quot;FNB&quot;,&#xd;
                &quot;NetRevenueTaxEUR__c&quot; : 50,&#xd;
                &quot;AdvisorCode__c&quot;: &quot;A1126&quot;&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;transactionLineRef&quot;&#xd;
        }&#xd;
       &#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Extract TransactionLineId" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">IdTransactionLine</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.compositeResponse[1].body.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Transaction ok?" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[0].body.success</stringProp>
            <stringProp name="EXPECTED_VALUE">true</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">3000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1504 - REFILL PRIORITY : BATCH TRANSACTION LINE " enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/actions/custom/flow/Loyalty_Run_TransactionLine_Batch</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;inputs&quot; : [{&#xd;
        &quot;Input1&quot;:&quot;&quot;&#xd;
        }&#xd;
    ] &#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">3000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1505 - REFILL PRIORITY : BATCH CARD GENERATOR " enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/actions/custom/batchJobAction/Pending_TransactionJournal</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;inputs&quot; : [{&#xd;
        &quot;flow_IsPreviousCycle&quot;: false&#xd;
    }] &#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${TimerBatch}</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1506 - REFILL PRIORITY : REFILL ACE PRIORITY ?" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Name from MemberBenefit WHERE MemberCycle__r.LoyaltyMember.MembershipNumber = &apos;${GIGYA}&apos; AND Name =&apos;REFILL&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;ref22&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">${TimerCallAfterBatch}</stringProp>
          </ConstantTimer>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Aces OK?" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[0].body.records[0].Name</stringProp>
            <stringProp name="EXPECTED_VALUE">REFILL</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="16 - CROSS AXIS PRIORITY" enabled="true">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">startnextloop</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
          <collectionProp name="UserParameters.names">
            <stringProp name="67815789">GIGYA</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="102378257">
              <stringProp name="938932639">${SourceSystemId}|${UID}</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="UserParameters.per_iteration">true</boolProp>
        </UserParameters>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1601 - CROSS AXIS PRIORITY : MEMBER GRIDS" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Id FROM RecordType WHERE sObjectType=&apos;Account&apos; AND DeveloperName=&apos;PersonAccount&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;rtRef&quot;&#xd;
        },&#xd;
        {&#xd;
           &quot;method&quot;: &quot;PATCH&quot;,&#xd;
           &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/account/Gigya_ID__c/${GIGYA}&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;BelongsToLaCollection__c&quot; : true,&#xd;
                &quot;LaCollection_MarketId__c&quot; : &quot;${MarketId}&quot;,&#xd;
                &quot;recordTypeId&quot; : &quot;@{rtRef.records[0].Id}&quot;,&#xd;
                &quot;PersonEmail&quot; : &quot;${PersonEmail}&quot;&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;accountRef&quot;&#xd;
        },&#xd;
&#xd;
        {&#xd;
           &quot;method&quot;: &quot;PATCH&quot;,&#xd;
           &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/CustomerSource__c/UniqueKey__c/${SourceSystemId}-${UID}&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;SourceSystemId__c&quot; : &quot;${SourceSystemId}&quot;,&#xd;
                &quot;Id__c&quot; : &quot;${UID}&quot;,&#xd;
                &quot;Client__r&quot;: {&#xd;
                    &quot;Gigya_id__c&quot; : &quot;${GIGYA}&quot;&#xd;
                }&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;customerSourceRef&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Member created?" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[1].body.success</stringProp>
            <stringProp name="EXPECTED_VALUE">true</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1602 - CROSS AXIS PRIORITY : POST T&amp;CS" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/LoyaltyProgramMember/MembershipNumber/${GIGYA}?fields=Id&quot;,&#xd;
            &quot;referenceId&quot; : &quot;memberRef&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Id FROM LoyaltyMemberTier WHERE LoyaltyMemberId = &apos;@{memberRef.Id}&apos; AND CycleActive__c=true&quot;,&#xd;
            &quot;referenceId&quot; : &quot;mtRef&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;method&quot;: &quot;PATCH&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/loyaltymembertier/id/@{mtRef.records[0].Id}&quot;,&#xd;
            &quot;referenceId&quot; : &quot;mtUpdateRef&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;OptIn_TermsConditions__c&quot; : true&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;method&quot;: &quot;PATCH&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/LoyaltyProgramMember/MembershipNumber/${GIGYA}&quot;,&#xd;
            &quot;referenceId&quot; : &quot;memberRefUpdate&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;Language__c&quot; : &quot;FR&quot;&#xd;
            }&#xd;
       }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="T&amp;C Updated?" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[2].body.success</stringProp>
            <stringProp name="EXPECTED_VALUE">true</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">500</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1603 - CROSS AXIS PRIORITY : CROSS AXIS TRANSACTION 1" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
           &quot;method&quot;: &quot;PATCH&quot;,&#xd;
           &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/transaction__c/TransactionNumber__c/${UID}_CA1&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                 &quot;CustomerSourceSystemId__c&quot; : &quot;${SourceSystemId}&quot;,&#xd;
                &quot;CustomerSourceId__c&quot; : &quot;${UID}&quot;,&#xd;
                  &quot;CodeBoutiqueTechnical__c&quot; : &quot;A1&quot;,&#xd;
                &quot;CreationTimeStamp__c&quot; : &quot;${__time(yyyy-MM-dd)}T00:10:00.000+0000&quot;&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;transactionRef&quot;&#xd;
        }      &#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">3000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1604 - CROSS AXIS PRIORITY : CROSS AXIS TRANSACTION LINE 1" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
 &#xd;
	   {&#xd;
            &quot;method&quot;: &quot;PATCH&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/ccc_product__c/ExternalId__c/Jmeter-${GIGYA}&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;Name__c&quot;: &quot;Jmeter-${GIGYA}&quot;,&#xd;
                &quot;SKU__c&quot;: &quot;${SKU_EXCLUSIVITY}&quot;,&#xd;
                &quot;Type__c&quot; : &quot;SellProduct&quot;,&#xd;
                &quot;Line__c&quot;: &quot;P1&quot;&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;productRef&quot;&#xd;
        },&#xd;
       {&#xd;
           &quot;method&quot;: &quot;PATCH&quot;,&#xd;
           &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/transactionLine__c/TransactionLineNumber__c/${UID}_CA1&quot;,&#xd;
			&quot;body&quot; : { &#xd;
		    	&quot;Transaction__r&quot; : {&#xd;
		    			&quot;TransactionNumber__c&quot; : &quot;${UID}_CA1&quot;&#xd;
		    	},&#xd;
		    	&#xd;
		    	 &quot;Product__c&quot; : &quot;@{productRef.id}&quot;,&#xd;
 			 &quot;NetRevenueTaxEUR__c&quot; : 350,&#xd;
		      &quot;Currency_Code__c&quot; : &quot;EUR&quot;,&#xd;
		    	 &quot;DivisionCode__c&quot; : &quot;FNB&quot;,&#xd;
		    	 &quot;AdvisorCode__c&quot;: &quot;A1126&quot;,&#xd;
		    	 &quot;Quantity__c&quot; : 1,&#xd;
		    	 &quot;ItemCategory__c&quot; : &quot;MAKE_UP&quot;&#xd;
&#xd;
		   &#xd;
		    	},&#xd;
            &quot;referenceId&quot; : &quot;testUn&quot;&#xd;
       }&#xd;
&#xd;
&#xd;
       &#xd;
      &#xd;
    ]&#xd;
}&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Extracteur JSON" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">IdTransactionLine</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.compositeResponse[1].body.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">300</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1605 - CROSS AXIS PRIORITY : CROSS AXIS TRANSACTION 2" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
           &quot;method&quot;: &quot;PATCH&quot;,&#xd;
           &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/transaction__c/TransactionNumber__c/${UID}_CA2&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;CustomerSourceSystemId__c&quot; : &quot;${SourceSystemId}&quot;,&#xd;
                &quot;CustomerSourceId__c&quot; : &quot;${UID}&quot;,&#xd;
                &quot;CodeBoutiqueTechnical__c&quot; : &quot;A1&quot;,&#xd;
                &quot;CreationTimeStamp__c&quot; : &quot;${__time(yyyy-MM-dd)}T00:10:00.000+0000&quot;&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;transactionRef&quot;&#xd;
        }      &#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Extracteur JSON" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">IdTransactionLine2</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.compositeResponse[1].body.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">6000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1606 - CROSS AXIS PRIORITY : CROSS AXIS TRANSACTION LINE 2" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
 &#xd;
	   {&#xd;
            &quot;method&quot;: &quot;PATCH&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/ccc_product__c/ExternalId__c/${GIGYA}&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;Name__c&quot;: &quot;Jmeter-${GIGYA}&quot;,&#xd;
                &quot;SKU__c&quot;: &quot;${SKU_BEAUTY_ROUTINE}&quot;,&#xd;
                &quot;Type__c&quot; : &quot;SellProduct&quot;,&#xd;
                &quot;Line__c&quot;: &quot;P2&quot;&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;productRef&quot;&#xd;
        },&#xd;
       {&#xd;
           &quot;method&quot;: &quot;PATCH&quot;,&#xd;
           &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/transactionLine__c/TransactionLineNumber__c/${UID}_CA2&quot;,&#xd;
			&quot;body&quot; : { &#xd;
		    	&quot;Transaction__r&quot; : {&#xd;
		    			&quot;TransactionNumber__c&quot; : &quot;${UID}_CA2&quot;&#xd;
		    	},&#xd;
		    	&#xd;
		    	&quot;Product__c&quot; : &quot;@{productRef.id}&quot;,&#xd;
 			&quot;NetRevenueTaxEUR__c&quot; : 150,&#xd;
		    	&quot;Currency_Code__c&quot; : &quot;EUR&quot;,&#xd;
		    	&quot;DivisionCode__c&quot; : &quot;FNB&quot;,&#xd;
		    	&quot;AdvisorCode__c&quot;: &quot;A1126&quot;,&#xd;
		    	&quot;Quantity__c&quot; : 1,&#xd;
		    	&quot;ItemCategory__c&quot; : &quot;SKIN_CARE&quot;&#xd;
&#xd;
		   &#xd;
		    	},&#xd;
            &quot;referenceId&quot; : &quot;testUn&quot;&#xd;
       }&#xd;
&#xd;
&#xd;
       &#xd;
      &#xd;
    ]&#xd;
}&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Extracteur JSON" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">IdTransactionLine2</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.compositeResponse[1].body.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1607 - CROSS AXIS PRIORITY : EXCLUSIVITY TRANSACTION" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
		&#xd;
        {&#xd;
           &quot;method&quot;: &quot;PATCH&quot;,&#xd;
           &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/transaction__c/TransactionNumber__c/T3-${GIGYA}&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;CustomerSourceSystemId__c&quot; : &quot;${SourceSystemId}&quot;,&#xd;
                &quot;CustomerSourceId__c&quot; : &quot;${UID}&quot;,&#xd;
               &quot;CodeBoutiqueTechnical__c&quot; : &quot;A1&quot;,&#xd;
                &quot;CreationTimeStamp__c&quot; : &quot;${__time(yyyy-MM-dd)}T00:20:00.000+0000&quot;&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;transactionRef&quot;&#xd;
        },&#xd;
	   {&#xd;
            &quot;method&quot;: &quot;PATCH&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/ccc_product__c/ExternalId__c/Jmeter3-${GIGYA}&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;Name__c&quot;: &quot;Jmeter3-${GIGYA}&quot;,&#xd;
                &quot;SKU__c&quot;: &quot;${SKU_EXCLUSIVITY}&quot;,&#xd;
                &quot;Type__c&quot; : &quot;SellProduct&quot;,&#xd;
                &quot;Line__c&quot;: &quot;P1&quot;&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;productRef&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;method&quot;: &quot;PATCH&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/TransactionLine__c/TransactionLineNumber__c/Line3-${GIGYA}&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;Transaction__r&quot; : {&#xd;
                    &quot;TransactionNumber__c&quot; : &quot;T3-${GIGYA}&quot;&#xd;
                },&#xd;
                &quot;Product__c&quot; : &quot;@{productRef.id}&quot;,&#xd;
                &quot;Quantity__c&quot; : 1,&#xd;
                &quot;Currency_Code__c&quot; : &quot;EUR&quot;,&#xd;
                &quot;DivisionCode__c&quot; : &quot;FNB&quot;,&#xd;
                &quot;NetRevenueTaxEUR__c&quot; : 50,&#xd;
                &quot;AdvisorCode__c&quot;: &quot;A1126&quot;&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;transactionLineRef&quot;&#xd;
        }&#xd;
       &#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Extract TransactionLineId" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">IdTransactionLine</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.compositeResponse[1].body.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Transaction ok?" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[0].body.success</stringProp>
            <stringProp name="EXPECTED_VALUE">true</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1608 - CROSS AXIS PRIORITY : ROUTINE TRANSACTION 1" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
		&#xd;
        {&#xd;
           &quot;method&quot;: &quot;PATCH&quot;,&#xd;
           &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/transaction__c/TransactionNumber__c/T-${GIGYA}&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;CustomerSourceSystemId__c&quot; : &quot;${SourceSystemId}&quot;,&#xd;
                &quot;CustomerSourceId__c&quot; : &quot;${UID}&quot;,&#xd;
               &quot;CodeBoutiqueTechnical__c&quot; : &quot;A1&quot;,&#xd;
                &quot;CreationTimeStamp__c&quot; : &quot;${__time(YYYY-MM-dd,)}T00:00:00.000+0000&quot;&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;transactionRef&quot;&#xd;
        },&#xd;
	   {&#xd;
            &quot;method&quot;: &quot;PATCH&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/ccc_product__c/ExternalId__c/Jmeter-${GIGYA}&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;Name__c&quot;: &quot;Jmeter-${GIGYA}&quot;,&#xd;
                &quot;SKU__c&quot;: &quot;${SKU_BEAUTY_ROUTINE}&quot;,&#xd;
                &quot;Type__c&quot; : &quot;SellProduct&quot;,&#xd;
                &quot;Line__c&quot;: &quot;P1&quot;&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;productRef&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;method&quot;: &quot;PATCH&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/TransactionLine__c/TransactionLineNumber__c/Line-${GIGYA}&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;Transaction__r&quot; : {&#xd;
                    &quot;TransactionNumber__c&quot; : &quot;T-${GIGYA}&quot;&#xd;
                },&#xd;
                &quot;Product__c&quot; : &quot;@{productRef.id}&quot;,&#xd;
                &quot;Quantity__c&quot; : 1,&#xd;
                &quot;Currency_Code__c&quot; : &quot;EUR&quot;,&#xd;
                &quot;DivisionCode__c&quot; : &quot;FNB&quot;,&#xd;
                &quot;NetRevenueTaxEUR__c&quot; : 50,&#xd;
                &quot;AdvisorCode__c&quot;: &quot;A1126&quot;&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;transactionLineRef&quot;&#xd;
        }&#xd;
       &#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Extract TransactionLineId" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">IdTransactionLine</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.compositeResponse[1].body.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Transaction ok?" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[0].body.success</stringProp>
            <stringProp name="EXPECTED_VALUE">true</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">3000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1608 - CROSS AXIS PRIORITY : ROUTINE TRANSACTION 2" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
		&#xd;
        {&#xd;
           &quot;method&quot;: &quot;PATCH&quot;,&#xd;
           &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/transaction__c/TransactionNumber__c/T-${GIGYA}&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;CustomerSourceSystemId__c&quot; : &quot;${SourceSystemId}&quot;,&#xd;
                &quot;CustomerSourceId__c&quot; : &quot;${UID}&quot;,&#xd;
               &quot;CodeBoutiqueTechnical__c&quot; : &quot;A1&quot;,&#xd;
                &quot;CreationTimeStamp__c&quot; : &quot;${__time(YYYY-MM-dd,)}T00:00:00.000+0000&quot;&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;transactionRef2&quot;&#xd;
        },&#xd;
	   {&#xd;
            &quot;method&quot;: &quot;PATCH&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/ccc_product__c/ExternalId__c/Jmeter2-${GIGYA}&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;Name__c&quot;: &quot;Jmeter2-${GIGYA}&quot;,&#xd;
                &quot;SKU__c&quot;: &quot;${SKU_BEAUTY_ROUTINE2}&quot;,&#xd;
                &quot;Type__c&quot; : &quot;SellProduct&quot;,&#xd;
                &quot;Line__c&quot;: &quot;P1&quot;&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;productRef2&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;method&quot;: &quot;PATCH&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/TransactionLine__c/TransactionLineNumber__c/Line2-${GIGYA}&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;Transaction__r&quot; : {&#xd;
                    &quot;TransactionNumber__c&quot; : &quot;T-${GIGYA}&quot;&#xd;
                },&#xd;
                &quot;Product__c&quot; : &quot;@{productRef2.id}&quot;,&#xd;
                &quot;Quantity__c&quot; : 1,&#xd;
                &quot;Currency_Code__c&quot; : &quot;EUR&quot;,&#xd;
                &quot;DivisionCode__c&quot; : &quot;FNB&quot;,&#xd;
                &quot;NetRevenueTaxEUR__c&quot; : 150,&#xd;
                &quot;AdvisorCode__c&quot;: &quot;A1126&quot;&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;transactionLineRef2&quot;&#xd;
        }&#xd;
       &#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Extract TransactionLineId" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">IdTransactionLine</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.compositeResponse[1].body.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Transaction ok?" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[0].body.success</stringProp>
            <stringProp name="EXPECTED_VALUE">true</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">3000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1609 - CROSS AXIS PRIORITY : BATCH TRANSACTION LINE " enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/actions/custom/flow/Loyalty_Run_TransactionLine_Batch</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;inputs&quot; : [{&#xd;
        &quot;Input1&quot;:&quot;&quot;&#xd;
        }&#xd;
    ] &#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">3000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1610 - CROSS AXIS PRIORITY : BATCH CARD GENERATOR  " enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/actions/custom/batchJobAction/Pending_TransactionJournal</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;inputs&quot; : [{&#xd;
        &quot;flow_IsPreviousCycle&quot;: false&#xd;
    }] &#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${TimerBatch}</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1611 - CROSS AXIS PRIORITY : ACE PRIORITY ?" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Name from MemberBenefit WHERE MemberCycle__r.LoyaltyMember.MembershipNumber = &apos;${GIGYA}&apos; AND Name =&apos;THREE_AXES_PURCHASE&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;ref22&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">${TimerCallAfterBatch}</stringProp>
          </ConstantTimer>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Aces OK?" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[0].body.records[0].Name</stringProp>
            <stringProp name="EXPECTED_VALUE">THREE_AXES_PURCHASE</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="18 - RDV CARD" enabled="true">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">startnextloop</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
          <collectionProp name="UserParameters.names">
            <stringProp name="67815789">GIGYA</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="102378257">
              <stringProp name="938932639">${SourceSystemId}|${UID}</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="UserParameters.per_iteration">true</boolProp>
        </UserParameters>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1800 - RDV CARD : MEMBER GRIDS" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Id FROM RecordType WHERE sObjectType=&apos;Account&apos; AND DeveloperName=&apos;PersonAccount&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;rtRef&quot;&#xd;
        },&#xd;
        {&#xd;
           &quot;method&quot;: &quot;PATCH&quot;,&#xd;
           &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/account/Gigya_ID__c/${GIGYA}&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;BelongsToLaCollection__c&quot; : true,&#xd;
                &quot;LaCollection_MarketId__c&quot; : &quot;${MarketId}&quot;,&#xd;
                &quot;recordTypeId&quot; : &quot;@{rtRef.records[0].Id}&quot;,&#xd;
                &quot;PersonEmail&quot; : &quot;${PersonEmail}&quot;&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;accountRef&quot;&#xd;
        },&#xd;
&#xd;
        {&#xd;
           &quot;method&quot;: &quot;PATCH&quot;,&#xd;
           &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/CustomerSource__c/UniqueKey__c/${SourceSystemId}-${UID}&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;SourceSystemId__c&quot; : &quot;${SourceSystemId}&quot;,&#xd;
                &quot;Id__c&quot; : &quot;${UID}&quot;,&#xd;
                &quot;Client__r&quot;: {&#xd;
                    &quot;Gigya_id__c&quot; : &quot;${GIGYA}&quot;&#xd;
                }&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;customerSourceRef&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="AccountId" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">AccountId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.compositeResponse[1].body.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1801 - RDV CARD : POST T&amp;CS" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/LoyaltyProgramMember/MembershipNumber/${GIGYA}?fields=Id&quot;,&#xd;
            &quot;referenceId&quot; : &quot;memberRef&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Id FROM LoyaltyMemberTier WHERE LoyaltyMemberId = &apos;@{memberRef.Id}&apos; AND CycleActive__c=true&quot;,&#xd;
            &quot;referenceId&quot; : &quot;mtRef&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;method&quot;: &quot;PATCH&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/loyaltymembertier/id/@{mtRef.records[0].Id}&quot;,&#xd;
            &quot;referenceId&quot; : &quot;mtUpdateRef&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;OptIn_TermsConditions__c&quot; : true&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;method&quot;: &quot;PATCH&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/LoyaltyProgramMember/MembershipNumber/${GIGYA}&quot;,&#xd;
            &quot;referenceId&quot; : &quot;memberRefUpdate&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;Language__c&quot; : &quot;FR&quot;&#xd;
            }&#xd;
       }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">500</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1801 - RDV CARD : TRANSACTION - OWN RETAIL" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
		&#xd;
        {&#xd;
           &quot;method&quot;: &quot;PATCH&quot;,&#xd;
           &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/transaction__c/TransactionNumber__c/T-${GIGYA}&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;CustomerSourceSystemId__c&quot; : &quot;${SourceSystemId}&quot;,&#xd;
                &quot;CustomerSourceId__c&quot; : &quot;${UID}&quot;,&#xd;
               &quot;CodeBoutiqueTechnical__c&quot; : &quot;G2&quot;,&#xd;
                &quot;CreationTimeStamp__c&quot; : &quot;${__time(YYYY-MM-dd,)}T18:21:32.000+0000&quot;&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;transactionRef&quot;&#xd;
        },&#xd;
	   {&#xd;
            &quot;method&quot;: &quot;PATCH&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/ccc_product__c/ExternalId__c/Jmeter-${GIGYA}&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;Name__c&quot;: &quot;Jmeter-${GIGYA}&quot;,&#xd;
                &quot;SKU__c&quot;: &quot;0402122&quot;,&#xd;
                &quot;Type__c&quot; : &quot;Service&quot;,&#xd;
                &quot;Line__c&quot;: &quot;P1&quot;&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;productRef&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;method&quot;: &quot;PATCH&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/TransactionLine__c/TransactionLineNumber__c/Line-${GIGYA}&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;Transaction__r&quot; : {&#xd;
                    &quot;TransactionNumber__c&quot; : &quot;T-${GIGYA}&quot;&#xd;
                },&#xd;
                &quot;Product__c&quot; : &quot;@{productRef.id}&quot;,&#xd;
                &quot;Quantity__c&quot; : 1,&#xd;
                &quot;Currency_Code__c&quot; : &quot;EUR&quot;,&#xd;
                &quot;DivisionCode__c&quot; : &quot;FNB&quot;,&#xd;
                &quot;NetRevenueTaxEUR__c&quot; : 50,&#xd;
                &quot;AdvisorCode__c&quot;: &quot;A1126&quot;&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;transactionLineRef&quot;&#xd;
        }&#xd;
       &#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="TransactionLineId" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">IdTransactionLine</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.compositeResponse[2].body.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Transaction ok?" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[0].body.success</stringProp>
            <stringProp name="EXPECTED_VALUE">true</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1802 - RDV CARD : EVENT CREATION" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/sobjects/Event</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &#xd;
	&quot;WhatId&quot; : &quot;${AccountId}&quot;,&#xd;
	&quot;EventType__c&quot; : &quot;RDV&quot;,&#xd;
	&quot;Subject&quot; : &quot;Event Jmeter : ${__time(yyyy-MM-dd-HH:mm:ss)}&quot;,&#xd;
	&quot;Type&quot; : &quot;WaitWhile&quot;,&#xd;
	&quot;IdWaitWhile__c&quot; : &quot;${__time(yyyy-MM-dd-HH:mm:ss)}&quot;,&#xd;
	&quot;DurationInMinutes&quot; : 90,&#xd;
	&quot;ActivityDateTime__c&quot; : &quot;${__time(yyyy-MM-dd)}T00:22:32.000+0000&quot;,&#xd;
	&quot;ActivityDateTime&quot; : &quot;${__time(yyyy-MM-dd)}T00:22:32.000+0000&quot;,&#xd;
	 &quot;Boutique__r&quot;: &#xd;
	 {&#xd;
             &quot;Code_Boutique__c&quot;: &quot;G2&quot;&#xd;
      }&#xd;
	&#xd;
&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="EventId" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">EventId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1803 - RDV CARD : TASK CREATION" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/sobjects/TaskService__c</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &#xd;
	&quot;Type__c&quot; : &quot;SERVICE&quot;,&#xd;
	&quot;Division__c&quot; : &quot;FNB&quot;,&#xd;
	&quot;EventId__c&quot; : &quot;${EventId}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="IdTask" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">IdTask</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1804 - RDV CARD : UPDATE EVENT - STATUS = COMPLETE" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/sobjects/Event/${EventId}</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">PATCH</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &#xd;
	&quot;WaitWhileStatus__c&quot; : &quot;Complete&quot;&#xd;
&#xd;
&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="EventId" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">EventId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1805 - RDV CARD : TRANSACTION JOURNAL RDV OK ?" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q= select id, Type__c from TransactionJournal where Type__c =&apos;RDV Beauty&apos; AND Loyalty_Program_Member__r.MembershipNumber = &apos;${GIGYA}&apos; &quot;,&#xd;
            &quot;referenceId&quot; : &quot;ref22&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="TransactionJournal = RDV Beauty" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[0].body.records.[0].Type__c</stringProp>
            <stringProp name="EXPECTED_VALUE">RDV Beauty</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1805 - RDV CARD : BATCH TRANSACTION LINE " enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/actions/custom/flow/Loyalty_TransactionLine_To_TransactionJournal</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;inputs&quot; : [{&#xd;
        &quot;TransactionLineID&quot; : &quot;${IdTransactionLine}&quot;&#xd;
        }&#xd;
    ] &#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">2000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1806 - RDV CARD : BATCH CARD GENERATOR  " enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/actions/custom/batchJobAction/Pending_TransactionJournal</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;inputs&quot; : [{&#xd;
        &quot;flow_IsPreviousCycle&quot;: false&#xd;
    }] &#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">80000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1807 - RDV CARD : ACE VERIFICATION ?" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Id, Name FROM MemberBenefit WHERE Name = &apos;BEAUTY_RDV&apos; AND Contact.Account.Gigya_ID__c=&apos;${GIGYA}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;ref22&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">20000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[0].body.records.[0].Name</stringProp>
            <stringProp name="EXPECTED_VALUE">BEAUTY_RDV</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="19 - RDV CARD - CANCELLED" enabled="true">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">startnextloop</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
          <collectionProp name="UserParameters.names">
            <stringProp name="67815789">GIGYA</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="102378257">
              <stringProp name="938932639">${SourceSystemId}|${UID}</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="UserParameters.per_iteration">true</boolProp>
        </UserParameters>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1900 - RDV CARD : MEMBER GRIDS" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Id FROM RecordType WHERE sObjectType=&apos;Account&apos; AND DeveloperName=&apos;PersonAccount&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;rtRef&quot;&#xd;
        },&#xd;
        {&#xd;
           &quot;method&quot;: &quot;PATCH&quot;,&#xd;
           &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/account/Gigya_ID__c/${GIGYA}&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;BelongsToLaCollection__c&quot; : true,&#xd;
                &quot;LaCollection_MarketId__c&quot; : &quot;${MarketId}&quot;,&#xd;
                &quot;recordTypeId&quot; : &quot;@{rtRef.records[0].Id}&quot;,&#xd;
                &quot;PersonEmail&quot; : &quot;${PersonEmail}&quot;&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;accountRef&quot;&#xd;
        },&#xd;
&#xd;
        {&#xd;
           &quot;method&quot;: &quot;PATCH&quot;,&#xd;
           &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/CustomerSource__c/UniqueKey__c/${SourceSystemId}-${UID}&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;SourceSystemId__c&quot; : &quot;${SourceSystemId}&quot;,&#xd;
                &quot;Id__c&quot; : &quot;${UID}&quot;,&#xd;
                &quot;Client__r&quot;: {&#xd;
                    &quot;Gigya_id__c&quot; : &quot;${GIGYA}&quot;&#xd;
                }&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;customerSourceRef&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="AccountId" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">AccountId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.compositeResponse[1].body.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1901 - RDV CARD : POST T&amp;CS" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/LoyaltyProgramMember/MembershipNumber/${GIGYA}?fields=Id&quot;,&#xd;
            &quot;referenceId&quot; : &quot;memberRef&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Id FROM LoyaltyMemberTier WHERE LoyaltyMemberId = &apos;@{memberRef.Id}&apos; AND CycleActive__c=true&quot;,&#xd;
            &quot;referenceId&quot; : &quot;mtRef&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;method&quot;: &quot;PATCH&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/loyaltymembertier/id/@{mtRef.records[0].Id}&quot;,&#xd;
            &quot;referenceId&quot; : &quot;mtUpdateRef&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;OptIn_TermsConditions__c&quot; : true&#xd;
            }&#xd;
        },&#xd;
        {&#xd;
            &quot;method&quot;: &quot;PATCH&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/LoyaltyProgramMember/MembershipNumber/${GIGYA}&quot;,&#xd;
            &quot;referenceId&quot; : &quot;memberRefUpdate&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;Language__c&quot; : &quot;${Language}&quot;&#xd;
            }&#xd;
       }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">500</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1901 - RDV CARD : TRANSACTION" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
		&#xd;
        {&#xd;
           &quot;method&quot;: &quot;PATCH&quot;,&#xd;
           &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/transaction__c/TransactionNumber__c/T-${GIGYA}&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;CustomerSourceSystemId__c&quot; : &quot;${SourceSystemId}&quot;,&#xd;
                &quot;CustomerSourceId__c&quot; : &quot;${UID}&quot;,&#xd;
               &quot;CodeBoutiqueTechnical__c&quot; : &quot;G2&quot;,&#xd;
                &quot;CreationTimeStamp__c&quot; : &quot;${__time(YYYY-MM-dd,)}T18:21:32.000+0000&quot;&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;transactionRef&quot;&#xd;
        },&#xd;
	   {&#xd;
            &quot;method&quot;: &quot;PATCH&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/ccc_product__c/ExternalId__c/Jmeter-${GIGYA}&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;Name__c&quot;: &quot;Jmeter-${GIGYA}&quot;,&#xd;
                &quot;SKU__c&quot;: &quot;0402122&quot;,&#xd;
                &quot;Type__c&quot; : &quot;Service&quot;,&#xd;
                &quot;Line__c&quot;: &quot;P1&quot;&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;productRef&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;method&quot;: &quot;PATCH&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/sobjects/TransactionLine__c/TransactionLineNumber__c/Line-${GIGYA}&quot;,&#xd;
            &quot;body&quot; : { &#xd;
                &quot;Transaction__r&quot; : {&#xd;
                    &quot;TransactionNumber__c&quot; : &quot;T-${GIGYA}&quot;&#xd;
                },&#xd;
                &quot;Product__c&quot; : &quot;@{productRef.id}&quot;,&#xd;
                &quot;Quantity__c&quot; : 1,&#xd;
                &quot;Currency_Code__c&quot; : &quot;EUR&quot;,&#xd;
                &quot;DivisionCode__c&quot; : &quot;FNB&quot;,&#xd;
                &quot;NetRevenueTaxEUR__c&quot; : 50,&#xd;
                &quot;AdvisorCode__c&quot;: &quot;A1126&quot;&#xd;
            },&#xd;
            &quot;referenceId&quot; : &quot;transactionLineRef&quot;&#xd;
        }&#xd;
       &#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="TransactionLineId" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">IdTransactionLine</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.compositeResponse[2].body.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Transaction ok?" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[0].body.success</stringProp>
            <stringProp name="EXPECTED_VALUE">true</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1902 - RDV CARD : EVENT CREATION" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/sobjects/Event</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &#xd;
	&quot;WhatId&quot; : &quot;${AccountId}&quot;,&#xd;
	&quot;EventType__c&quot; : &quot;RDV&quot;,&#xd;
	&quot;Subject&quot; : &quot;Event Jmeter : ${__time(yyyy-MM-dd-HH:mm:ss)}&quot;,&#xd;
	&quot;Type&quot; : &quot;WaitWhile&quot;,&#xd;
	&quot;IdWaitWhile__c&quot; : &quot;${__time(yyyy-MM-dd-HH:mm:ss)}&quot;,&#xd;
	&quot;DurationInMinutes&quot; : 90,&#xd;
	&quot;ActivityDateTime__c&quot; : &quot;${__time(yyyy-MM-dd)}T00:00:00.000+0000&quot;,&#xd;
	&quot;ActivityDateTime&quot; : &quot;${__time(yyyy-MM-dd)}T00:00:00.000+0000&quot;,&#xd;
	 &quot;Boutique__r&quot;: {&#xd;
                    &quot;Code_Boutique__c&quot;: &quot;G2&quot;&#xd;
                }&#xd;
	&#xd;
&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="EventId" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">EventId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1903 - RDV CARD : TASK CREATION" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/sobjects/TaskService__c</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &#xd;
	&quot;Type__c&quot; : &quot;SERVICE&quot;,&#xd;
	&quot;Division__c&quot; : &quot;FNB&quot;,&#xd;
	&quot;EventId__c&quot; : &quot;${EventId}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="IdTask" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">IdTask</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1904 - RDV CARD : UPDATE EVENT - STATUS = CANCELLED" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/sobjects/Event/${EventId}</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">PATCH</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &#xd;
	&quot;WaitWhileTags__c&quot; : &quot;CANCELLED&quot;&#xd;
&#xd;
&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="EventId" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">EventId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1905 - RDV CARD : TRANSACTION JOURNAL WITHOUT RDV BEAUTY ?" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q= select id, Type__c from TransactionJournal where Loyalty_Program_Member__r.MembershipNumber = &apos;${GIGYA}&apos; &quot;,&#xd;
            &quot;referenceId&quot; : &quot;ref22&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="TRANSACTION JOURNAL 1 NOT RDV ?" enabled="true">
            <stringProp name="JSON_PATH">compositeResponse[0].body.records[0].Type__c</stringProp>
            <stringProp name="EXPECTED_VALUE">RDV Beauty</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">true</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1906 - RDV CARD : BATCH CARD GENERATOR  " enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/actions/custom/batchJobAction/Pending_TransactionJournal</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;inputs&quot; : [{&#xd;
        &quot;flow_IsPreviousCycle&quot;: false&#xd;
    }] &#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">10000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1907 - RDV CARD : NO ACE VERIFICATION ?" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">services/data/v${API_VERSION}/composite</stringProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;allOrNone&quot;: &quot;true&quot;,&#xd;
    &quot;collateSubrequests&quot;: &quot;true&quot;,&#xd;
    &quot;compositeRequest&quot;: [&#xd;
        {&#xd;
            &quot;method&quot;: &quot;GET&quot;,&#xd;
            &quot;url&quot;: &quot;/services/data/v${API_VERSION}/query?q=SELECT Id, Name, Status FROM MemberBenefit WHERE Contact.Account.Gigya_ID__c=&apos;${GIGYA}&apos;&quot;,&#xd;
            &quot;referenceId&quot; : &quot;ref22&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(token)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Compteur de temps fixe" enabled="true">
            <stringProp name="ConstantTimer.delay">80000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="ACE NAME" enabled="true">
            <stringProp name="JSON_PATH">$.compositeResponse[0].body.records.[0].Name</stringProp>
            <stringProp name="EXPECTED_VALUE">BEAUTY_RDV</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">true</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
